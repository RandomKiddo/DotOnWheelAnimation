(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* Created By: SaveReadableNotebook *)
(* https://resources.wolframcloud.com/FunctionRepository/resources/SaveReadableNotebook *)

Notebook[
 {
  Cell[
   CellGroupData[
    {
     Cell["Animation of a Dot on a Wheel", "Title"],
     Cell["By Neil Ghugare", "Subtitle"],
     Cell[
      TextData[
       {
        "We are given a wheel with a constant angular velocity, ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[OverscriptBox["\[Theta]", "."], TraditionalForm],
             "errors" -> { },
             "input" -> "\\dot{\\theta}",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        ", in the ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[{"-", OverscriptBox[StyleBox["z", "TI"], "^"]}],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "-\\widehat{z}",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        " direction (that is, the wheel is moving in the ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[{"+", OverscriptBox[StyleBox["x", "TI"], "^"]}],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "+\\widehat{x}",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        "direction), with a radius ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" -> FormBox[StyleBox["R", "TI"], TraditionalForm],
             "errors" -> { },
             "input" -> "R",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        ". There is a dot on the wheel at a radius ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" -> FormBox["\[Rho]", TraditionalForm],
             "errors" -> { },
             "input" -> "\\rho",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        " such that ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[
                {
                 "0",
                 "\[LessEqual]",
                 "\[Rho]",
                 "\[LessEqual]",
                 StyleBox["R", "TI"]
                }
               ],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "0\\leq\\rho\\leq R",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        ". Assume the wheel starts at (0, 0, 0). For the visualization, we will use ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[{StyleBox["R", "TI"], "\[LongEqual]", "2", "m"}],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "R=2\\mbox{m}",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        ", ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[{"\[Rho]", "\[LongEqual]", "1", "m"}],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "\\rho=1\\mbox{m}",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        ", and ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[
                {
                 OverscriptBox["\[Theta]", "."],
                 "\[LongEqual]",
                 "-2",
                 "rad/s"
                }
               ],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "\\dot{\\theta}=-2\\mbox{rad/s}",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        "."
       }
      ],
      "Text"
     ],
     Cell[
      BoxData[
       {
        RowBox[{RowBox[{"R", "=", "2"}], ";"}],
        "\[IndentingNewLine]",
        RowBox[{RowBox[{"p", "=", "1"}], ";"}],
        "\[IndentingNewLine]",
        RowBox[
         {RowBox[{"thetaDot", "=", RowBox[{"-", "2"}]}], ";"}
        ]
       }
      ],
      "Input"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          {
           RowBox[
            {
             RowBox[
              {
               "circle",
               " ",
               "=",
               RowBox[
                {
                 "Graphics",
                 "[",
                 RowBox[
                  {
                   RowBox[
                    {
                     "Circle",
                     "[",
                     RowBox[
                      {
                       RowBox[{"{", RowBox[{"0", ",", "R"}], "}"}],
                       ",",
                       " ",
                       "R"
                      }
                     ],
                     "]"
                    }
                   ],
                   ",",
                   " ",
                   RowBox[{"Axes", "->", "True"}]
                  }
                 ],
                 "]"
                }
               ]
              }
             ],
             ";"
            }
           ],
           "\[IndentingNewLine]",
           RowBox[
            {
             RowBox[
              {
               "dot",
               "=",
               RowBox[
                {
                 "Graphics",
                 "[",
                 RowBox[
                  {
                   RowBox[
                    {
                     "{",
                     RowBox[
                      {
                       RowBox[{"PointSize", "[", "Large", "]"}],
                       ",",
                       " ",
                       "Blue",
                       ",",
                       " ",
                       RowBox[
                        {
                         "Point",
                         "[",
                         RowBox[{"{", RowBox[{"1", ",", " ", "R"}], "}"}],
                         "]"
                        }
                       ]
                      }
                     ],
                     "}"
                    }
                   ],
                   ",",
                   " ",
                   RowBox[{"Axes", "->", "True"}]
                  }
                 ],
                 "]"
                }
               ]
              }
             ],
             ";"
            }
           ],
           "\[IndentingNewLine]",
           RowBox[
            {"Show", "[", RowBox[{"circle", ",", " ", "dot"}], "]"}
           ]
          }
         ],
         "Input"
        ],
        Cell[
         BoxData[
          GraphicsBox[
           {
            CircleBox[{0, 2}, 2],
            {RGBColor[0, 0, 1], PointSize[Large], PointBox[{1, 2}]}
           },
           Axes -> True
          ]
         ],
         "Output"
        ]
       },
       Open
      ]
     ],
     Cell[
      TextData[
       {
        "So, as this thing rotates, the y position of the dot will oscillate up and down. Note that we are taking the ground to be y=0. The x position of the dot will vary as the wheel will move right while the dot oscillates left and right as well. We can derive the following equations for the dot:\n",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[
                {
                 SubscriptBox[StyleBox["x", "TI"], "dot"],
                 RowBox[{"(", StyleBox["t", "TI"], ")"}],
                 "\[LongEqual]",
                 "\[Rho]",
                 "cos",
                 RowBox[
                  {
                   "(",
                   RowBox[
                    {OverscriptBox["\[Theta]", "."], StyleBox["t", "TI"]}
                   ],
                   ")"
                  }
                 ],
                 "-",
                 StyleBox["R", "TI"],
                 OverscriptBox["\[Theta]", "."],
                 StyleBox["t", "TI"]
                }
               ],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "x_{\\mbox{dot}}\\left(t\\right) = \\rho\\cos{\\left(\\dot{\\theta}t\\right)}-R\\dot{\\theta}t",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        "\n",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[
                {
                 SubscriptBox[StyleBox["y", "TI"], "dot"],
                 RowBox[{"(", StyleBox["t", "TI"], ")"}],
                 "\[LongEqual]",
                 StyleBox["R", "TI"],
                 "+",
                 "\[Rho]",
                 "sin",
                 RowBox[
                  {
                   "(",
                   RowBox[
                    {OverscriptBox["\[Theta]", "."], StyleBox["t", "TI"]}
                   ],
                   ")"
                  }
                 ]
                }
               ],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "y_{\\mbox{dot}}\\left(t\\right)=R+\\rho\\sin{\\left(\\dot{\\theta}t\\right)}",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        "\nFor ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               SubscriptBox[StyleBox["x", "TI"], "dot"],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "x_{\\mbox{dot}}",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        ", the first term takes into account if the dot is on the left or right side of the wheel, and the second part takes into account how far the dot has travelled in a ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               OverscriptBox[StyleBox["x", "TI"], "^"],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "\\widehat{x}",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        " direction. The second term is negative since a negative rotation (rotation in ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[{"-", OverscriptBox[StyleBox["z", "TI"], "^"]}],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "-\\widehat{z}",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        ") means a movement in the ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[{"+", OverscriptBox[StyleBox["x", "TI"], "^"]}],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "+\\widehat{x}",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        " direction. In the ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               SubscriptBox[StyleBox["y", "TI"], "dot"],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "y_{\\mbox{dot}}",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        " equation, the first term takes into account that y=0 is the ground, not the center of the wheel, and the second term takes into account where on the wheel the dot is. \n\nWe can graph ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[
                {StyleBox["x", "TI"], "(", StyleBox["t", "TI"], ")"}
               ],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "x(t)",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        " and ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[
                {StyleBox["y", "TI"], "(", StyleBox["t", "TI"], ")"}
               ],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "y(t)",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        " over time:"
       }
      ],
      "Text"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          {
           RowBox[
            {
             RowBox[{"x", "[", "t_", "]"}],
             ":=",
             RowBox[
              {
               RowBox[
                {
                 "p",
                 " ",
                 RowBox[{"Cos", "[", RowBox[{"thetaDot", " ", "t"}], "]"}]
                }
               ],
               " ",
               "-",
               " ",
               RowBox[{"R", " ", "thetaDot", " ", "t"}]
              }
             ]
            }
           ],
           "\[IndentingNewLine]",
           RowBox[
            {
             RowBox[{"y", "[", "t_", "]"}],
             ":=",
             RowBox[
              {
               "R",
               "+",
               RowBox[
                {
                 "p",
                 " ",
                 RowBox[{"Sin", "[", RowBox[{"thetaDot", " ", "t"}], "]"}]
                }
               ]
              }
             ]
            }
           ],
           "\[IndentingNewLine]",
           RowBox[
            {
             "Plot",
             "[",
             RowBox[
              {
               RowBox[
                {
                 "{",
                 RowBox[
                  {
                   RowBox[{"x", "[", "t", "]"}],
                   ",",
                   " ",
                   RowBox[{"y", "[", "t", "]"}]
                  }
                 ],
                 "}"
                }
               ],
               ",",
               " ",
               RowBox[
                {"{", RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}
               ],
               ",",
               " ",
               RowBox[{"PlotLabels", "->", "\"Expressions\""}]
              }
             ],
             "]"
            }
           ]
          }
         ],
         "Input"
        ],
        Cell[
         BoxData[
          GraphicsBox[
           {
            {
             { },
             { },
             TagBox[
              {
               RGBColor[0.36842, 0.50678, 0.7098],
               AbsoluteThickness[1.6],
               Opacity[1.0],
               LineBox[
                CompressedData[
                 "\n1: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\nRIhHo7qi2VkGRsbK5/BNhfgfeKGTmg==\n       "
                ]
               ]
              },
              Annotation[#1, "Charting`Private`Tag$4662#1"] &
             ],
             TagBox[
              {
               RGBColor[0.88072, 0.61104, 0.14205],
               AbsoluteThickness[1.6],
               Opacity[1.0],
               LineBox[
                CompressedData[
                 "\n1:eJwVmnk8lF0Ux5kx89iNPQxmUNZEC63uUVIJRQiJSNmiDSnapJA1IVGkJJGl\nSJGEZE9CihTZiTwz9v193r98vuZZzj3nd+69v/t5mE6nzU+QODg4IskcHP//\nfXjFiartHKY3sO10zMrKCqpsYRgfZrgho0Isv2tgBa1Uld5gMC4iD4444bLP\nK+hhWYQ8hRGK4nxsrgUmraBTO3w8Z+Tvo+Cy1yNiuiuoZcE1Fpd/jooWZyTT\nvZYR9rNHeUy+CA3O3Lmk+mcRpdalnP0rX4uMPaUMOP/MocmE12pd4bVozWWe\n/K7qOWToUt/bPFeL3huLqDTlzKFR8oxlcUsdAvyd4VDAHNq8w3RraHADUs+s\n2rokNYeachdJyuNf0Kq7ii6zh2fR1ToNI22HFlR3fjpQun8aZbx8syYrrgXp\n7dk2U944jZoTdpJXN7Sg9F9HhYLeTiMlF+uSVVta0b26jxo24dOojhykySH6\nDfEv3xE33TSNJHb8FPlS1YZM5+843g+fQjm5oT9PaXYgm6/jfrbmk2hEZCTc\nyLEDJfyQyafqTyJlXyM9ldgOtCjJkdS0bhI92s6X2jvXgdIs7zNLBSZRTG34\nSdtPP9GPjbQirvoJ5Nsbxdpj9wtdGWgPc94/gV4Z4o9XR/1CDH9Zu5VtE2j8\n+UELcsUv9Lj2iWexxgRyPSP8plT5N8r1v/jvjuAEsl2KCdg08Rvt32YWVtfC\nRil89TeEd3ej6DfqEOjMRno7/O2u2XejxJzooPWH2ajTS33T+IVulGFjYUwx\nYqNVzWEDDZndaKCwYUREi43uJBjvC6H9QYZcdPbXJRa6sbpRcOXnH3TV4rT/\nfAoLKRy+Mug59Qdtjdvy5U8sC5WFaJZ1CvYg14t2d8ZCWWjxb+TZYv0exF1O\n+XLOm4V8Xh1o9XnWg4Z2rmLo7mchF/T1/ui5XrSbou/6fgVHHI+ni3+G9SKB\nQocrijM4SuCid9al9aLzCymSOf9wVFN7Uu55Wy+6eOXwau3fOFKxWHx8Ymsf\n6vw20IaX4qiskFlpcagPlYhXaF9+gyNrqT39u071oXRr80zNPByF/L6jrJDc\nhzRg/TbOxzgaclV+8ZuzH314HVx4MhhH1+qNP3+W7kdGMlKdstdxtErz3L+S\nDf1Ic4fHk/lLONo7UaKVdKIfFZrEma8+jaNuyx6z21f60TGa2uHzbjjye4ud\nv3ivH6WzZnUGj+Po+WXz14dr+5GfbcN7sMHRzu4LbYY9/ShLL+fKGgscdex8\nOLNpoR9NvgsyXX8AR7zcQ1vE1g4gNYdmo5LdOHKPuVzaFD2Afk2sjCduxBFp\n6nHXh+cDyDqVfuKVFo4SD9dw5FYMIPvkPQjXwFEdXXRXxOQAYrwYM+xajSOn\nq5udAwQG0fzAnZvRCjia/3P0pseaQTSUFL/fVR5H6s8yqvdZDyJjYaHwMCkc\nVfI0Dm0+O4iWzn8Q+y6BI7tTEzwqtwfR83P79PeJ4WiycZW65JNBVNPfLdkj\njKNwbT1jaskgmv1wJDlVCEdKscc9p1oHUcOKdkewAI5KpkMi+8YGUcjjy02x\nfDiysMnJbaEOoZJ78zdreHA0+q6lqUJ+CH18TV1R4MZRkNwc6+XmIaSem4rS\nqDiiX5cTTTUbQsvcnvuNKTgq6N21Mdp9CP0TfrFahgtHxoZulldvDCGvjl1f\naWQc9WVE+no9GELpa98dXEvCUQBfwb2jr4fQwbCt6Wc4cSTm1f7WuHEIBSiE\nt3Rw4Ci7abl92+AQ0v0s0+FBsOEGpQU1jmG0SmCmWJHg33H76NJSwyiP+7Mv\niWDfWa8dPOuHUU/oPwFuggWPxNrPGg0j+pLJtY0Ep78vujp4fBj5n736OZhg\nPUbXo7aAYdR8/+0kJ/H+tkCuik9xwyimsWnyMcFe/aq9BTnDKImm3+BOxNtt\n385dXjuMjm3/HnCaGM+hHyGan/uGkUr6/c5UYrxVZpst2leGkX0dfYiTyM/m\n+sGL/dIjyPzxuaQoDEdZBvdSWJtGkG+uGtuIyK9cqeGnpYMjiMZtPriByH+0\n7vQIz6kRZH3ivI8RUR/yy6c0ieARJL3hXnwkUT9fNUsdhccjqOTRLgMOEaI/\nnnDZab4fQR/yAy6kEPVvjD/+zHBiBNUESx88KY0joIl+Nhf8i0x3LPVFyOIo\nP7SCba/6Fznnuf7uYRD9G8DUu+DwF40o7fwhpkLoe7rp+I1Lf9HoSUYlSx1H\nl09fC42K+4scFVz/Lqwj9OrU1fqs/i+K/37z/b3NOGr9GTmfP/AXcfNWHFDd\ngaM9lnqMMs5RlO65cXRQH0caex96/NAdRTWnVvhH9+Moudz4Tp/5KBp4+NZb\n2wxHwtsWC3HPUWI9cct+YoWj6bVHSDxpo+j6DZa5oBOOykWl7m+hjaFzjieS\n/u/vjRE1pbvVx1D9U5V3aUT/p1P9+swMx1DjxtNM/xBC73Nt69wDxpBUTte5\nF/E4suqKrUocGkPYpPqg3GtifrI2GE0n/0PBf+wXVd7jaFvzhHC+3D9kSuLM\nsf+EI8Yn86P1Fv/Q0Ee9EOM2HI1k0iYXyv6h2YOabuvmiX5TKpPi7vyHNh9q\neX2XzEJfHp5GYjP/kODm7G8KAixUEN14W2PtOLpiq88sZ7DQVd9w5tH746hb\nW+zz/D4W4mUGKXcReWvKixDbm8ZCNdvvrLtCzCNP39J1Luey0C3rZF1Zc0KH\nHFGz34pZiBT9ds8RDxzddPr8j/WVheaXR12+PyTuH9jq3cTJRn87LTO+kFgo\n5vjKMQFXNsqcdcrzEmKhzoyTsV4+bOQqduatAJ2FundzBbAC2ahv/+2a/ZtY\nKNqN98+RZGJ9KS4dqnZhoeNZSvChjY0aEpRVyxpY6OWLVRtTTSbQ7YKN2g7t\nLGQwNbte4OgE2tukv2W5nxj3neinCacmUCVmt2/7CgtxtLUaCYRPoBLfaLe3\n2myUfGH3HreGCZRtMfc8L56NinXEEmuI9TeSVq+WemwC/fC5IznvPYWKdGVf\nm3pNILd6OaWHoVOoz/40WvSfQJl6UlX2yVNoW7aoxeF7Eyiwft/37TVTaGif\n3WWBxglkimG+R2Wn0a4bY18ubptEdsdI1XMN02h2SsjHXGIKrdZzkfuOZpHT\nT4sPZOL/VVBqvei8gM5+CnI6rTyPBm8HnCjl4gS5PkPq9IZ5VNGt80JVmBPq\nSTyZATCPztXttoyR5YTVEMEKtZlHQpuKLI7ocEJ7cdy1tLB5JLW6v7DGhRP0\n89KT28fn0e+K6jvTtZwgnFTTsevtAtpf7/C34TYJSotuX6mrXEAGh27qZMaT\nwOOHsYLZ1wWkKyOnev0xCT6Jf3WzH1lAe4xSomWKSXAxun3Wj76IikPkYWWI\nBH9ujkjkXFtEu/jaRNx2k+HlGf5Dq/YtoVyVX8Ocs2RoSBS9mG21hLSWknZV\nk7lgoFI6ZafzEtq0JZv3uhAXSEup/j11dQnlDxTYfF3DBUHlu2+Uv15Cku/N\nzP5YcIGVyNV8d4VllFHrXpeawwXz+SzR9wvLKPXcTOGnwxQQ+z27xZxnBQlf\nfLnS7kgBTW6OY4MSK2j13eTK3x4UOG4n+EJ4/QrasaH4QNFVCjRwqRucdF1B\nr7ZeNslNp0CypbO30LcVdKM44e4tFgVS/T1GtA5zwMR0aKzqJSpolfHMBh/l\ngG+Z9x/GXKdCGVcGpes4B5B2HjT9G0KF7og+RsQZDtDaxn3U4x4V5B4dPTwc\nygG+4wKb0vKpkFh5oDK1hAPyQoODhoeooMbz7+tsBQfcDS4rMRinQpFJeNeB\nWg4Q+cMbGjlFhR9tNfNL3zhg6Xlj8hgnBhLD+tq24xzQ/Ouu0A8pDGIENiaL\nKHBC7A5TupkhBgrmzVluKpxQOkOJityPwcv4M0Vlmpww3j+ZXXQQgyb57Fav\nbZzQ4l1Y8sMWA8H1a/jqLTjB82rS+81eGCT7Vq5SOMIJ/NeTtXrOYbD2ndOa\ni46ccHYr/5jfBQyMDVL0lb04QXpli5jXNQxuW63yuxHMCSVa+X0+dzCQTiq8\n2RHBCbbse+4hcRg877K4qx3LCZyMnz3B9zGocb2T0/WIE4y+XQ00ScWA6s/b\nv62YE3qzfp5h52IQ/yGDHVPGCZlHly955GOwmmsPx0gVJ7jyuGt8LcTAIOKG\nTEILJyieUj3u9B6DwJRFs8lRTiBpH9iRVIvBQa23Z9UnOCG95uQx9wYM5MrP\n33GaI57PdSx3zRcMintGmpooJPiWXVR4shWDkPPpOMZPgsNSnk4jbRhYcTnR\nkAgJ0ndnMI60Y8Be3X4gW44Ed1abvyf/xqCsMPZ0nxIJxE9dj97WjUHknoNR\nMuoksCsocjjWg4GaW3VjqC4Jvq/68OvMAAazc4H/ynaQIFSwJNBuCIOq23qC\ns7tIkNXEpG0awcDpxWuTkwdJ4KUe2PxiDAOtHWc9H1qRYIOD7Mr+cQyWP2tE\ntNqRYOS5E/kHjkHi+JOGnW4kCNNXDSqcwMD1msPoxdMkyNZ8P8c9hYGOsAz/\nSx8SDN9gbNk7jUHz+pj98oEkOJbpxxMxi8GjjyYeViEkCNCYiI2Zw8DLgics\nIpIEOTf3dgXNY7C9vzKzMpbo++J1A8cXMOD1vVa3kEi8zyzy2bpFDH5Qt4+s\nTyWBjY0fc4jg9HszPO7PSLD9lJZ5xBIG3ir5qqnZJOgpUN4sv4yBfpHXvh/5\nJOBnL319SLCgkZqbEDFvdF68LsezgkFnR3+IYRkJXm/PpTsSnOmRmnG5igSv\nql/VPyXYb9GupqCBBKmGA2rfCTaMWDX0t5kECTebt0wRLCbXiim2k0CUrTm7\nQnBPTpSybRcJHif9OTFDcB7av+dOPwnUN64E/iT4ShPVpeYvCfKF6g+8INjY\nseLWCosE5YpvGtwIlmZfTteZJYEh1XlelOChwC1VnsskkBt91J5JxF8oOtWf\nxkUGyWceHpoEB6XlUTp5yRD9BM9LJsZvvunUalFhMqT0385aIPLDqFLebSRJ\nhhZKpd1ugv9Z9TpflyWDz1qLKn8ivyWDyUFvFcngIqIwkkzk/7afbdq4KhnC\n2Dvrcoj6WPNIVK7RIkNx5LxrFlG/NYlfe4/qkMFs9bua2BkMJtUiyHHbybDr\n1OpRd6Le0cZcu8j7yBAk4hT6i9CH/a8PTlsPkOH07FGeS2wMNLz8A89akoEn\nwsqGzCL6MYpd3uVIBouHkRc6Cf3FM3L+SLiSYXGzu4nGKAbOL904Tb3I8Cfv\nEsmN0CtHSzeUXCLD6ndeMs8JfQcNl6Zeuk6GjFPkU9f6MODheEjaEkJcP1Fo\nok/0g8ham8rXcWQwajf4ffUXBvd26a72fkCGnNAniUsdGNBtxW+tf0KGyghV\n8okfRL8Hf92Tm0cG6W9e03gzoYeHuRmeb8jwSjInWrwJA82CCB6NUjI8viY2\nrfgZg81/9tVn1JPhZI6AwXIVBkbbKkwfD5DhSY3PwPMiDBrNHuUeGyPD0PTM\nV1li/jjkeoUmP0mGNxvPNPu/wsAubmtzEicXmLo0bpvOJPph/JVlHJ0L/DjT\nu/sTMbj75IldiDkXPPDbXlbsi8Gq4uvvDW24gHnZ0ubbWQweNDnIUY5xQeyx\ni7Udp4h+WJLpvu7JBQ9vvnVJd8Lg7eHY4/4hXJBRyaO704TQO99Nd69SLnjD\n0H53Xw6DYwrH6zU+ccGI7eph11UY9G/W1/hbzwU1bw6MKooQejmxNObSzgUH\nTlUXHaVgwFnmc9ZxkguqHLee6xmhwhrvk34WahSYfXtTSv8VFdZu7TqUokWB\noFFucassKmzksF43okOBIoWrUbZpVNgZvm/g6i4KnNMKM1wfTwX7NA2LLDsK\nXDw4mil3kQrxrex1pCgKIE2kt7CNCpRNVwdzJyhQ/dFUeH8hBfgXZirm5yig\nLjp0zDubAiLlZ5J3cxDPKXr7JCqNAgwTJ8uf/MQ6J6p+5EEMBbaf2P2RuoYK\nIXZcJGEvCnjH8aUctabCBrVziv4KFOibumfF954Ksxb/WLPXueCx/obzvz5S\ngSXcfjjblwscIhqjcuuooPpC/6OFBxd0KFFqD/2gQnP3M83LxH7g66Fz2x5M\nUKHDPGVRl9gvlL40ZqxVI+a9CVPh89VkuOfJOWJ6D4PYsOBvbE5Ch/3ul2PO\nckNaLn5H1IETTPui1eXkeAG9Ekl+KLWIGtT7Wu2UeGHTlrRUV85FtP+87pUk\nNV7QOh7vuGN4Ae0l/W5apcsLc96rSZSiBbSToe4repAXWPXbtUVtFtAmu09l\n3IG8wNayN7JPmkf01jnLiX5esLJZsdJXm0OJMiYr2qO8EGuv05cvOoekjj/K\nOMPmhb41oma6S7NIgm24MLbMC8avG9PONs0iGi320ZAkH+CWoSrFF2YR2Vjz\n7699fLBvFzO/tnYGjXx0ulaTzQcX9RY+ml2eRvJ3frhHFhD8M5wc7zKNLOxN\nLS3e8cGLQcmqKbNpVDq7Ra27hg9W6zfVcytPo5i1wq0zvXzQ1bwx8kYzsX+9\n90FZWZofKhyTb3Csm0JnnDeJjDH4wTbj2kEpmSmUrp21+EqZH8S5n9uYYVOI\n1hD/VW8TP3iTD5AZ3ZOoj8PL3+ogP4h5p3/dcXcShbvTv9y8xQ+SC3mSWSsT\nqFw3pmh/BD84XVf2+To2gaa5uNOEY/nB6OgbL+nOCXQsZcLvYSo/8KiPcIgX\nTaCNrXUKr0v4YdNhKclX3hPo146Lvn1sfqj65OpSyGYjEb7xY5lz/LDaf+sF\n2V422vvDef8ZDgGY6GuVz2xho1fnDjIWBQTgwwa10Y2v2ejWM+U6UVUBcL05\noyl+iY00hdtkdzkIgFmbercSHxsNRAwExp0QgK3t717+WGahh7wzg4MeAsDI\nvnoll81C/FyrXoX7CcA6z4bAqg4WGpm2MWy7IwB57xzOP3zBQk87f3m5VQpA\nFnX+DXaYhexs/rW8qxOAJ4fk3s4as5BY2/Jmwa8CAF8rTwvuYqHAL/Lk/F8C\n4Btg4pqxjoWOVTjeW5wWAMsXErL3eVmIntH/IUpVEB5FDdteryb8q9K0Us86\nQQjY4ppW8wFHYanU2xt1BMGqVZSq8xZH84nKFu07BWHjqu1HbzzH0Y8ItyEF\nO0FoOTdhMRJB+HXeSyY+ToIgphVn5xxM+N/g26+qXQUh+QnioRD+tPBaVsAp\nH0F4bDAXXeyNo7vnx2iFkYIQ2NmxMnMUR0b4kg93nCBsvwo/MqxxRPIU/Gmb\nJAiynO511w7h6MzJdU9XngmCk7DGuvR9OFLpRbzmOYKwrcSxeMIAR10OB0+n\nFQjCC/24aFfAkanN2S37yol4DOaManRxRG27npxULQht+a8N8jfg6L15DPnf\nZ0FgZwcXfCL8vIZx/ueYDkGoTNwr60j4/76aj+v7uwXh2lyOyogSjpJ2t97T\nHRSEsHCpL4lMHPGiKcfOCUFoDM0UOC+DIz99Fe7CeUG46t342GEVjgZ2HcmJ\n4hQC5S/w65I4jiwMIy3cuIXghdKVT5UiOKrYWz6/U0gI/KUuHd9Bw5HW/slH\ndAkh2GyRUtongKNkE+U903QhmHX58quYD0f8B23HvigKAb3MqfoDD44umUfc\nfa5GPC9C5foEhqMhi7ItN7SF4EDhSZoVlfD7hye67DYLQUdl+8VBLhxV2qy5\npYOEwPlnQfkzMo7W29lo0AyFYD499W88CUeP7MObh42FoNuibL6AE0eCjh/8\nPh4irg99xvr/PCjgOFvuoa0QGFk7N1/mwNHfE6s/+ToKQaXepWQVgm1drT0O\nugoBRb7X6v/zpxr3MGG108T9O4QWeQnW8Sx9Q/YVAiHUH7GT4LTTrKO/AoTg\niFoF33OCRc4pcb25IQTJrhe99Yj3XfM+nBl9Wwge1VpUkYj4/vnePuh+Rwie\nhoitTBFsd/H99K4EIVg2H5dZRYyvzh9/IJsiBHoHY6TcKDjafEVx18xTIWCr\nMyeHiHykX7MabnohBDMMnWf3uHEkdiM0KjNfCOypPWt9eHEUeLNkU1CxEAwe\nfRF4nR9HePD4z6PlQsDnfDelRBBHDeGWKsJfhGDoCknygyiOtkaFNI58E4IE\n63anWxI4yrjzzruyUwhG4txtAqRwFBTPLL8wIgQXki8oTsrjiJ1g4WLGEgId\n44VeH0UcHUsKFlCfFQJku091jTKO5JqmNcZJNLD46ishQujR0ozGYUelQVCB\n9DMTQq/hzaotNTw0cNESiXxD6Hm+1e7iYxoNRnmz1ST0cdTWXvHJUo4GMzVl\nIkuWOBI40plQwaSBVdDQ5+dHcGTQOeWxbjUNGpMobkGOOHr1W0WER4MGepSx\nuQpPHEX2RtqXbKHBo7mCoOMhOPrknKGtuoMGTVv89S9H4Wixv5wrHmiwe1TX\nsDIeR+5Dk5mn99DgYFze1/anRL+P2c4oWNKAffnsJUYVoV+xGy1XrWlgeid3\n9mIjjia3ZeV2HqFBDzvCfbmN0NvtBZd4JxrkMpxqgoeI8Sg/+MFzhgaGSt4v\n7guw0AunX0X4bRrYiU+HP3ZgIdJtSrxJJA1OBdVNJruzkPXLtecy79AgXqc1\nvtKHhSgcV9ScE4h4L1L5wsJZyP6hXNL3pzR4Vci9mrOEhWg/HAJKy2gQzXlQ\ny1uBjU6uBFvLVBL35zldmlzHRiVr8jb6VdOAdrixKWkHG7n5cIxpNxLju/4L\nc7BhowqR1KNPf9JgyJWxPz+GjbxNevTCp2lQKvJ09Wn+CfSjwpnTVkMYzA+m\nxSxLTyJcv0P68jphODHddbBNfRJh5Qc2PlovDM+6vVXrt08inQ9bXQY2C8Ne\n/RuBfA6TKPYd7fO53cJw8tPj9T1pk+hAQUlCmL0wyBudTyzfNIWqnoppvY8W\nhoywWlM+j2n0OqTSnjElDGvVd3tKSs2hDKP6VcGzwjD+R/FdtjaxH+Bvbh5b\nEAa5J2JvDxvNoWvRXYbvSCLgM5KS2u8/h4wT5jWtaCKgc8vT+k/XHOp5prUS\npi4Cn06eb1qVNY8Eqx+kzDiKwGxnLFeg8SI6SfHpbmwUgewDQymxmSvo+Dn/\n1/yJotBr3TW+GSeBzvrfr1UfisI1le2hdQsk4GVDoeEjUeAuah20wMiQd5b6\n5lq6KPyMHw86JEf4gDN33k6+EoUruts3Tu0nQ/zpZ+8660XhR1jGwVdPyVB7\nqqX8xZIoeM3Icxz+f5+soVNRyyEGot6foxrsuODMaELFAFkMEnQtInRduEDi\nlP1HBq8YREYIeI75c4GTx3BlrIQYOLlWktrSuGDRbaU6YJ0YDOavLAQR+9x1\nLuqNxo5i8Ots+b382xT47SZ/OttZDO50nJ5yi6VA+ClRmqCrGExArBstmQLD\nZxfMvniJAXw7rLz2JQWeBNR/MwsQA7JcMOeTNgpIxnj8sronBjEjfjQ3OSpU\nxTpceZMoBtH4aksxZSp43zskvypZDJYCqYI566jw9cE2x/Y0MVhef/HSC6BC\n2DO+/iOvxKA++ltSsyMVVkqyRo99FgNJr5fxuY+okPMhJaK8SQzS7poL6WZQ\nwa7irqZCqxj0Pu8Jy8qlQlG1/5neDjHgf7Cw7UgpFc437588MSQGrz111rd0\nUGFw8O+CO1kczhnGLonSCD820vWgnioOu+Wv6jhJYGAw1rJDg1ccTI6rb3lA\nxyCV/e7qGE0c8n7PW7SoYHBkKYx8Rk4covbeJhsDBl9ENPh8tohDR7ZPv7UH\nBnqensNJ28VByKq3g3oGg5zqnOoKRDxvW9bhx94YRAZoB9EMxSEx/1VR6mXC\nHw/oLGWZi0OacexIWSThV8HvZ7OlOJifCO5rjyH8ZFJR0Zw18TuyFuqOx4Dv\n4HbfPQ7ikHCk5kt+MgZ1RfrjPR7iYF+SMH4hG4OtYjc+85wWhzd8I05zeYS/\n86rM0jonDtqp+0pcCjAIVdzjesVPHBQemazwvsNgb4TxH6mb4kBJDul1ryb8\n1GDEBwgRh5UdjCfmdRgo7/zy0CVMHGpWNfMoE36QOmNm+/qOOHi7J+TFEf7x\n07HDLQeTxYGu8ikztBODje8SXl5IFYdThyeHvv3GIE28Iyo5TRx8txonCf4h\n/GydnfFopjhkGMYZ7u4n/LVSsppojjgcihbatGsQg+NXu7i3vhSHsqHKwLXD\nGOzc6PQp+I043O3jVa0m/PKryCdPcorFoeBhpp/vPwwUhvuuf3tP1O/ZE3ER\nnPBvyS56ipXiEJ/ZrixI+PMzsxl0o2pxiBDJjvOaxKDbfGT+TJ041BdRd76b\nwqAM83xT2iQO21fF7ZMi/L+WU05cfwsRX8lQstocBo9Kxs/zfxeHk6Ecyirz\nGNAktc03dIiDfvvJLuEFDK6ePadl+0scwrZ+/zRI8L/6fMHr3eJQ5a334/ki\nBvZrpkaf9YpDdUSxmPUS4Zev6dQ3DojD8cbEi2yC9X5eeD41LA6pVQ6Ui8uE\nXjYVBdPHiHyZvSv8S7Bs9PyJXThRj3vR4UYrGISPbDNwnxAHQ7HJm3EELxpc\nVrgzLQ7hd9UfNxB8KqWU4+2cOIhtzuke///8Z27l9+9Fcbh0SUn///MbYwv9\n9xQOCQhXc/04T/C7nMAkDbIEZJwOcukhmGpsKX2PKgGr7OvuvCTYbFj5Piev\nBICd18n/z28e3JqXPCUgAXYTOwf+P18aVPwc30aTgK8l9iJ3iXjXl6eI64tJ\nALcDfZSL4Mv252KzJCXAO1Tax4EYb82CgaiEjAR0jm/LfUzkR/S+ZMw1OYIN\nnj1oJPJnrzNC+8uUgKQN1aiXyPfzlpIoy9USUGptlNRN1GPyTJRgmYoEJG5V\nfFVF1AsJOkWoaUhAPIQEx81gcDtrI3/cOgloeD4hZzKNwbe9WNjKegkYCFQM\nGCPq73HjRUjrFglY8pNJGGJhUMi4iqEdBBu/ctj1v35KzW49BwnY3J+5fIvQ\n173Z6RtX9kjA+GHD7zUjGPTE1ZKGjSTgl32rTPUQBms3PLh+yFQCRI4nmuQM\nYPDRU/+qiqUEBD0IvaPbg4Egn9hyjLUEUH3f5rV3YWCTMRCwdEQCbE+rfXf+\nhcF4T9ilZicJ4C+ptNL5gYGMdZtPwBkJeDQ/OlfVgMHJqYzJgfMSYG1wUe1V\nLQYvY/zPm10g8jU2/PhWFQZ7PjPOrrlCXL/3bfTfDxic3+lxqimMyM/ktvPp\nLzEo7drxd2uUBNwwNJnsJOYHnss096cxElC56C249ByDlDevXS7dJ+q56+q2\n+VQM6jU4jis9kwBtEunTcDQGEnXNfyIzJQD7eMXGKxwDR5enx+ayJeDI5ftD\nncEYzKQa2TcWSMBeVV0NvysYKErG2fhVEM9Pn/ic4Y6BP6fawYZfEiDXdevc\nih4GAwZ8P9b8kYBDf9tHd2/B4GDIqMP1PgnokIyS9NuAgZJQ7mmdvxJQkZny\nIUUZgwb6xqhHsxIg6L1Te1kQA7nNeo3eopLEPC/AixHzeYi/vNUXCUkgPaC8\noLVQgV3K8VtVWhJ4H5XJYg1UqN79cew3QxLCP/z8UPyeCmcO7RXYpykJZd0/\nNyFiPanwMjeW3ScJt5eGDnwh1huNVxtaLxhLQmbi+YxcGyrET4nZNR+QBJ4M\nnjVXzKjgEfDdI9hKEnKP5o32E+uV2G27MNZxSRhham/pJda7k09P1n26Igk2\nA/fnnn+nAG/npb1eBZLgrB4kJbODAjoXngtEvZGEuw7UkZQNFHAU+dGcWywJ\njvZ6nKvUKPB276ajrDJJWFWwzrFHggInX4+f9f4sCd4env4941xQHumcdGlA\nEiBxr9zTFC7w0zf9d2vVKmI+K5LtmSZDfzozNiVgFWT3yGUsh5IgVkWKq8hS\nCt4Zq1RVOS0jO/s1z3qtpaDjn15r7L5lpBS7wUjQTgpmjxxe66K1jApWTKKP\nO0lBc8tsidTyEmptC6QLnpYCkpCJzvv7S0j05ujG4yFSsHT2582NzYso5s+H\nEwLvpKCO/jwhYd8CspX8zL25VAqS1qbJumkvIAWTjiyncilIf+mSu1tqAb16\nO8l6Uy0FWy6v/6s4PI+ao1SvOLVKgdJmJ1v/0HkkrHc3/s2YFDRoHLava5hD\n0Yknqx0Z0uAVrJF+w2EWXfANPB+gKA2jexvR232zyN48Wf7eGmnwAB/PlQ2z\nSIO37UKDhjTgblOWVdyzqPbibhXdLdIwEJ7Lsz1/BpFslEL5zaUhZY9z0wTf\nDPKR7DF6c0MaHpXHrGN9nkJ2E0vTX29JQ4G72WJ78RQy+CL1ZDRUGoztn936\n+WwKiQSbLTCjpYE3pve2auAUypkuywp/IA0cN0d3TetOoaFvKfxOr6Vh9tFf\ndDFjEtnGHm3kH5SGc+9vuJsmTyB6Pq+Mx4g0nFbdW2saMYG6vr5xqR2TBobP\nuO+5gAnkLCTCeWtSGo6INl5WOjKBvG5XbVjhlAHL3oUjm6UnUOC1dfdZdBkw\nkF8jvSeFjQxSOvsPMGQAs5Bl34lmI6w0dH2OogyozXzvJwWyUfhCb727mgxE\nG9l8OnyCjeJ9E5Z7dWXgnxtH49e1bPT8FKdzm7kMDPduHVSpYqFTYTl5G62I\n3wv0BgaLWEgz88hSjA3xvB1Djl+yWejV4Ov4A8dkwDtz6vCqeBYqcXKvrfGU\nAYHD2r1xrix05bqkhPJZGQh/8c7rwVEW0n9U6XTTWwZaG14HNJizUNUvuUV9\nfxmw/bMu8fkOFmqybtF8FyIDpy98XXVEnIViLlzzlwqXARWD9Nk8PhayjF9b\ncyFKhvCze3Zpk1iooyXYcWO8DLRpbwt6OY6jPtPtsdlPZCCnJSY0v4Hwt57D\n3XzPZOBeRvE9h0ocuYXHr3XPlIGOttkOnRLCP9fiVWteyoBF0xc7lxc4mjV4\nOpdSSnBD6pvmSMLfv0u5UVkuA4Z77eYPEv6PY32iwHClDBRE7vKauo4jTD6K\nub5eBuidXCovfXAkMee3r/K7DMRevndjyh5HiafPtwx1yMDWkGh2ug2OZAc8\njwr8Jq43HKdctcCRUovTWas+GeBvdzd+YoSjDdnG94dwGehL2fv0/WYcFSru\nURSYlIF9xbO3nm4k/HWifrb2jAxYyXm5FmjhaGewTvmlJRnwVNM126OKo6ol\nrf0pHHQ4O9XtXr8aR/u81b99JNOhUWExw1cBRwcdGcP8vHTotOPP30nHUet3\n6fPaAnRoczCPPE74c2tT8SVLGh1GwrJeZBH+vbNSKPiSKB3+KjSKyYjhyGEb\nr3CKBB00nYU+vxTGUc9LrqSPUnQYCjj+87QQjk6qrCgN0elw7uLR3ZYCOBpJ\nnsvhZ9AhVncdzYkPR17ik5u1FemQYfMc4nkI/x/2r8JyDR0Ktm77ycJw5EMa\nNr6kSocrvexebypRD7/etmQNOtziuGwvTyHqMf7r2Md1dMB/KJmyyEQ9Tv4Y\nGVxPBxfD1tcjJBwFdTZ78+vQYTBbNIGPYO5Dn5e1ttDh2hzPzCFOHIXVVodY\nbqcD592A1o//f/8DFSKXEB2SHb5oHyE4prDkQfJOOgSUcNGkCZZY+2bNx910\n0Al4f5qD4MQnL/MG99LhYP9mM0GC5aRfbOU3pkPCS4uCXQSnRqdXah2gw3XB\niIRHBCthqaaW5nRwSF5cVCLen3E56cdFSzo8vWTX3USwxmScU7I1HXh0ufTT\niHjz3KNHK44Q8fQP01OI8W38c9t30J4OHTKPz5Zz4ejN4Zsc/E50iJp12M5H\n5Gdr49XbWieIeqpNXQwg8ldqcEnM0pUOy3Nf14gT+d35zjv5ogcdFEwp6Bsv\noQ/t0yrJXnSQK95eWsKPI6MMt1cVZwm+VZlSL4ijz3LO2we96bD9XfBvTqK+\nrXw2B7X86QDxt472iRP6CDzUYXGFDoUhr+5EryL0MWvifPE6HTYlzfM6y+Co\nt3+nX0UwHaqyY/OuMYn3pzQ+VgujQ03reiMRQo+PrG0/x0TSIXuhuP+rCo7s\n688qHI+jA1fz9ekOQs/vg5aM6xPoIORz2kJpE47oeqEXNjygw6+dT28mbcFR\nR96jBvIT4v2JUWtFd+Foi7vGjEc6Hcxt6kNE9+IoQfEts/U5HUIWjl7TN8GR\nVfwX37Q8OmhZ92NrrHHU7L/M2F1Kh73uavlCZ3Ckven2/uxyOuQxPNb5++Io\n+p+4r/gnOqzWPlIuehlHpo5r6/vriftf6LbX38ZRnaGdz612or+qux9ZZuBI\nlWMo5V8nEc8drXjl/79PLDpfZ9VNh3Wu3+ZWv8WRoUaYvPIgoad933Ke1eCo\nQri4tnqSDvRD99eU/MURs3735LpZOoTfpAz/m8TRtaCvcgkLdKCIbDA3WcaR\n3szQeVeSLEQVxGWFC7NQcaekHA9NFrh3IyeRrcT8+8znnJG6LAR66dyQv8tC\nwo6cD19pykIh/cif5WQWOiMdUS29XhYu3ayexbKI+Tsijf53syx0/zaujv/I\nQpnnWqrCDGXBbShq4vE0Cz3eoS3z2VEWZkP/3LJwZqMKU94bC86yYB+gcrPm\nLBv1OPSOqLrKAt8F/y/2V9lIMTCu+JaXLKhpeZayEtkorWrOBvxlwXB32drs\nFjZ6eqAiIT9WFkxFHS7b7p9AGY6HJBKrZeFyV/Puq+aTqOacxpWaOlkQ/FjW\nPHF8Eg3doAxMf5YFv28mH276TCKV9DevD7XKwkC8GoXz/iR6PiJjKfCHiCeR\naXnwzyTKPN9399q8LNyScXyiemEKZd/0EXZZKwcJBgfe+BROo9HtRwNvasnB\nla2l+5vrpol+M5h4skEO6JQ4g91d0yjTSexb9xY5sA23fuDJPYMyUH6CraEc\nRDITTlYcmUFpc7i8qYMcyOn4Nh6gzqJEz1Oam+7Iwe+1zmvC3OZQsOXx/eQp\nOXj5+Uv3dbtFtKkz9XnwZ3kQ+j7lVxrKCTRN19ncJnmIfjpwjhnPCaNXNff8\naJEHC6uHftcec0Ka4rs+lQ55MFqkaax/xwliHq3ydQPykCu/v+3YKCfMB5D3\nUzkYMPB+34UmExK08+mU75ViQNuLrger+clQtZHYd0szoDA4Fb5IkqHg6KLQ\nWToDbpkOaZ5VJEN0boX9fXkG2BbJX3i4lQx7Dx1YHF7NgA26e6JiXcnwNtFV\nN2w9A7h020Z6K8iQoJqU/Xk/A2bDn+81OMMFkxOGT2+YMODH2cTqR/5ccKCU\n/WDLAQbwJCYo47e4gHrIKPypOQNKeC9RXR5ygU/AnPtlGyLehKjMl7VcYP7l\nsMpaFwZ09tmeTJanQM59MqPXlQG310GtFLG/5XHOlbzvzoCTPrcFb22kQNks\nFaN4MeD14PkqrX0UWKdQ2N/pzQDPG36P6s9SgN9H7El4IAPWm+tvW/pAAVdU\nlrgziAFXJDJ++tVS4CPPqZjZmwyoTFoO622mwKXkj9edQxmA1Xvm3OynwHD1\nuWPboxlgrDlJmuehQpX0V9nRhwyIuxb5PewAFa6WRSTsL2LAioWdTzrhF0Z+\nlcXOFTOAcem6xUvCT1gtTEQ/K2EAzlZmZRB+Q0PHNpRcxoBYerSY/RAVfmSt\nufSuigG+1SMjv0iE/7334Yh6KwN4JeIrFTdi8LCAfbj9GwOSTabeswi/w928\n2iL4OwOijttbZCEMuvjDjXs7GCBmNib5x4jw94HWO5L+MGDzOw4Dy2OEX/Jk\nyfGNM2BY+A06RPgtszAlmSKcAfSnK9MtYRiUZByWdGEzwOnhQWdE+LW7ve+F\nPk4xIELfdV1bAgZgc5vDf5EBcudVtpAIv5fl+35RZZkBHMV1B7+/IPxdLD7b\ntsIAzWHz8vg8DMYarVjryUxIsMButL7BINFAsWeEhwnNRrxnjD5hQHGy+p3A\nxwS/jq0bz9ZgcOZqaIehABOqTp0nB9YTfrR4vPkxjQmezo8fOX7F4NV3hS8H\nRZjA6qLaa7US/m3Ksn5ZlAm6RQcow22En19X8tFWkgkhfpITkp0YOJiMf+CW\nYoLs8LRa5G8M6twVSgqlmVAx5b/uXzcGj56GFIjIMWGf/dANj34M+D6+yyuT\nZ4KoyerqkEEMfLv/vfBiMuECM/991DAGJjKWT+uUmLBHg5FjO4ZBQp9m2ZE1\nTLBfXpniGMegL5v756gyE6Y0Jz/eJfx/AJTQhNSZIKXQ1nNlAoMannj1RxpM\nuFVzX+P7JAZiLacNtTWJ8abL/pOZxuDFCcWAQ9pM6OBlNrjPYjCruRTft54J\nXbzTPd5zGBjMtr302cgEzt06Jz3mMYguz2ug6jBhNjLokOkCBj9v3x68p8sE\n1JKfIbuIwRoLZ5LqFia4SlQfbyf4nKyebPFWJpADWIHXlwg/PyC5ef92gvfH\nc0ksY8CbxzLv3MGEItbewXiCrS7We3oiJpjyfFblWsHg8c6nIcvAhCZrifqj\nBP/ju/okaicTPn7fW/eE4C3frEsZBkzYkvd2TRvBQcnr21/uZsI1GOmaJLjJ\nhX9y5x4mGNFjpv4/P6JrDwi27mXCKYE4l/+//3Gd/6B6wogJdDFunf+//yn4\neN9gej8Tyk5qOWYRzBFx3iHYhAk7z94Ydvn//MnK5NKqA0S+W9K/0AhOkFeO\ne36QCTOOZ8TSifj7hjjytpozQU1+4K0ywVqvOurqDzEhZ4deaRwx/gD/gn47\nSyYMSnetxon8VBtEcvyzYoLwdgeWDsEigq4yV62ZYGF0U8H9//Ok7/o6NFsm\neAnufRdK5D/zkYxZ6hEm/PRofB9H1Gfabcpj/VEm3D1yWiOSqN/ODV9ufbRn\nguHAS57zMxhELmakWhxjgqqcibUBUe81UXbffY8zIbDfxvIFoY9z1jps7AQT\n3txW5d3FJurDpAncP0nUd1ZgRxWhJ8uCjzvfuTGh4Wi3egyhv0eXHx419mCC\nXFDWeMdfDEYNL/j9OsWEjA+79WkjRP7b1XJWThP13JabAgNE/h9z1UafZYL8\nnfbX2/qI/J/63cs8T7xfMPSUYg8G+ct3pAx8meCgtKXp7S8MehTngkICmPC4\n6Tb/YgsGmmPNKVJXmOC0Wq/cjujHS4UvijOvMoFbvc4gs5HI175jeEMgE+Kf\nSrbw1WKg71V9RDiUCUzs6tfhEgzmfwwbVt5mQlT9cXePIqK+u/jXXwgn6tE6\n8abtNZEPKTPuX1FEfDrZie45GPBXdhRkxDOB0Z2bG5KMQZXmUsqRBCaxVlnJ\n2iRicPW+fJhgIhOGXlreF43HgO3l7Oj9kAmS/fiYYQQGP6T+CUAaE7Q0zc5l\nXMIgJog2x37KBL3xD0V1PhjsH1/f9/QZE9Lf8178fobId+WFYr4sJiyOJyTk\nncQg7TSny/eXTPh1t3PeyYyYnz6JlXl9YEIpfZNQmwJG7Ft0s5jlTKjN3CPw\njI5Bb6JNfGsFE+LuXw46LkH0z5nkU1urmDDi3bUmhQeD7TIqUtTPxPi+axgo\njlOB++y2cw87mHBSdn//6UIqpNCdlBqmmFDjlxSco0OFrRvUNZ1mmLDeeaEw\nQ5MKrfsmdWdnmYDb/rW+u4a4/8Kt/UqLTBjInNu9VYIKZ75mngsgKYCXWAn2\ndZICcGuiTENIAQbuMks35lKgZzzoaISKAiyL9DPPSlFA6eOzeNMjCmBm+tNb\nsJYMjRqzaZ12CtCpXX5FrJQMfvF7893tFUDPbE+AcD4Z6t2Gv9xyVIBmVFOC\nPyDDOZo6zwcXBTiUZLlzzxkyfDia47/OWwFE/dpXnRIng+1swTFahALs/Jz+\nyMqWBNFrK9SaSxXgiwY3a7yVA05OcH2tVVOEmqlNRaMcC8g+06DRTkMRaEWm\ndyjD88jKMah+fK0ixHjpUtW/ziPDL+QqcW1FaLtZ++pB6jxak0V656irCIIU\n2i3mrnnU78TxdG6XIqgbdMv2hcwh5+YFP9WjimAm/enhL8Yssgvd5ltirwjc\neqm/53hnkQX4nz9wTBHShPd9V52aQQY5854+xxWh8PtK9afaGaR0e86p3E0R\n3iVsC5o4P4N69WeMbXwVgfreJMOiYRo5vWQzQqMUQevHA/fYyCl0KvDQotEd\nRTgmctLj8MUp5HOo4Dv/XUWY/LdqbKvzFAqZ8omMjleEByr3LzhvnUI5W+YW\n7j1UBPNrhi/3Dk2iufKVtvQsRWgS/fM43GgSke4ee+WarQgbJA/b++hOIn7n\n8gi1XEVIcsgMCFSaRHLUGwY5rxQh1imonndlAhkYUV+9LlKE3yvOi+2vJ1B0\nM39EZbUirD186PoTtQnCf3q63qpVBLcvvT9HpSbQE+/GXXvrFWHYispnzzOB\nCiWi5+sbFcEoiTf/7RAbddqKurZ8U4SQeYUnFs/ZSLlXaldPryJYy1tomq1n\nI62CS3Jp/YoQKjJWqKnERltv/pw7MagIP6T/8epKsJGx8sO84RFFkPFULa+Z\nZ6FzHgw5FouIZ6P70uQnFgrYfn3u1YQiPI6p8F9bxEI3BXpavacUIdxuXCjm\nBQsl5D4Jm51VBIvqKbFuwp88vsblUjyvCD+3CjfXBrNQltmJnQGLipDbcmNH\ntz8LFShUyeotK0Kgt0SA4hkWKp1YM7eyoghZcdiru84s9B+Z/9yK\n       "
                ]
               ]
              },
              Annotation[#1, "Charting`Private`Tag$4662#2"] &
             ]
            },
            {
             {
              { },
              {
               GraphicsGroupBox[
                {
                 {
                  GrayLevel[1],
                  AbsoluteThickness[4],
                  Opacity[NCache[Rational[2, 3], 0.66667]],
                  CapForm["Butt"],
                  JoinForm["Round"],
                  BSplineCurveBox[
                   {
                    Offset[{3, 0}, {10.0, 40.408}],
                    Offset[{3.0, 0.0}, {10.408, 40.408}],
                    Offset[{0, 0}, {10.608, 40.408}],
                    Offset[{5.0, 0.0}, {10.608, 40.408}],
                    Offset[{10.0, 0.0}, {10.608, 40.408}],
                    Offset[{10.0, 0.0}, {10.608, 40.408}]
                   }
                  ]
                 },
                 {
                  RGBColor[0.66667, 0.66667, 0.66667],
                  AbsoluteThickness[1.25],
                  BSplineCurveBox[
                   {
                    Offset[{3, 0}, {10.0, 40.408}],
                    Offset[{3.0, 0.0}, {10.408, 40.408}],
                    Offset[{0, 0}, {10.608, 40.408}],
                    Offset[{5.0, 0.0}, {10.608, 40.408}],
                    Offset[{10.0, 0.0}, {10.608, 40.408}],
                    Offset[{10.0, 0.0}, {10.608, 40.408}]
                   }
                  ]
                 },
                 {
                  EdgeForm[None],
                  FaceForm[
                   {GrayLevel[1], Opacity[NCache[Rational[2, 3], 0.66667]]}
                  ],
                  PolygonBox[
                   {
                    Offset[{30.0, 9.5}, {10.608, 40.408}],
                    Offset[{30.0, -9.5}, {10.608, 40.408}],
                    Offset[{10.0, -9.5}, {10.608, 40.408}],
                    Offset[{10.0, 9.5}, {10.608, 40.408}]
                   }
                  ]
                 },
                 {
                  RGBColor[0.66667, 0.66667, 0.66667],
                  AbsoluteThickness[1.25],
                  EdgeForm[None]
                 },
                 { },
                 InsetBox[
                  StyleBox[
                   RotationBox[
                    TagBox[
                     RowBox[{"x", "(", TagBox["t", HoldForm], ")"}],
                     HoldForm
                    ],
                    BoxRotation -> 0.0
                   ],
                   StripOnInput -> False,
                   LineOpacity -> 1,
                   FrontFaceOpacity -> 1,
                   BackFaceOpacity -> 1,
                   Opacity -> 1,
                   FontOpacity -> 1
                  ],
                  Offset[{20.0, 0.0}, {10.608, 40.408}],
                  NCache[
                   ImageScaled[{Rational[1, 2], Rational[1, 2]}],
                   ImageScaled[{0.5, 0.5}]
                  ]
                 ]
                }
               ],
               GraphicsGroupBox[
                {
                 {
                  GrayLevel[1],
                  AbsoluteThickness[4],
                  Opacity[NCache[Rational[2, 3], 0.66667]],
                  CapForm["Butt"],
                  JoinForm["Round"],
                  BSplineCurveBox[
                   {
                    Offset[{3, 0}, {10.0, 1.0871}],
                    Offset[{3.0, 0.0}, {10.408, 1.0871}],
                    Offset[{0, 0}, {10.608, 1.0871}],
                    Offset[{5.0, 0.0}, {10.608, 1.0871}],
                    Offset[{10.0, 0.0}, {10.608, 1.0871}],
                    Offset[{10.0, 0.0}, {10.608, 1.0871}]
                   }
                  ]
                 },
                 {
                  RGBColor[0.66667, 0.66667, 0.66667],
                  AbsoluteThickness[1.25],
                  BSplineCurveBox[
                   {
                    Offset[{3, 0}, {10.0, 1.0871}],
                    Offset[{3.0, 0.0}, {10.408, 1.0871}],
                    Offset[{0, 0}, {10.608, 1.0871}],
                    Offset[{5.0, 0.0}, {10.608, 1.0871}],
                    Offset[{10.0, 0.0}, {10.608, 1.0871}],
                    Offset[{10.0, 0.0}, {10.608, 1.0871}]
                   }
                  ]
                 },
                 {
                  EdgeForm[None],
                  FaceForm[
                   {GrayLevel[1], Opacity[NCache[Rational[2, 3], 0.66667]]}
                  ],
                  PolygonBox[
                   {
                    Offset[{30.0, 9.5}, {10.608, 1.0871}],
                    Offset[{30.0, -9.5}, {10.608, 1.0871}],
                    Offset[{10.0, -9.5}, {10.608, 1.0871}],
                    Offset[{10.0, 9.5}, {10.608, 1.0871}]
                   }
                  ]
                 },
                 {
                  RGBColor[0.66667, 0.66667, 0.66667],
                  AbsoluteThickness[1.25],
                  EdgeForm[None]
                 },
                 { },
                 InsetBox[
                  StyleBox[
                   RotationBox[
                    TagBox[
                     RowBox[{"y", "(", TagBox["t", HoldForm], ")"}],
                     HoldForm
                    ],
                    BoxRotation -> 0.0
                   ],
                   StripOnInput -> False,
                   LineOpacity -> 1,
                   FrontFaceOpacity -> 1,
                   BackFaceOpacity -> 1,
                   Opacity -> 1,
                   FontOpacity -> 1
                  ],
                  Offset[{20.0, 0.0}, {10.608, 1.0871}],
                  NCache[
                   ImageScaled[{Rational[1, 2], Rational[1, 2]}],
                   ImageScaled[{0.5, 0.5}]
                  ]
                 ]
                }
               ]
              }
             },
             { }
            }
           },
           AspectRatio -> NCache[GoldenRatio^(-1), 0.61803],
           Axes -> {True, True},
           AxesLabel -> {None, None},
           AxesOrigin -> {0, 0},
           DisplayFunction -> Identity,
           Frame -> {{False, False}, {False, False}},
           FrameLabel -> {{None, None}, {None, None}},
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}},
           GridLines -> {None, None},
           GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
           ImagePadding -> {{All, 48.4}, {All, All}},
           Method -> {
            "DefaultBoundaryStyle" -> Automatic,
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2,
             "TrackMousePosition" -> {True, False},
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2},
              "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
               "freeformCursorMode" -> True,
               "placement" -> {"x" -> "All", "y" -> "None"}
              }
             }
            },
            "DefaultMeshStyle" -> AbsolutePointSize[6],
            "ScalingFunctions" -> None,
            "CoordinatesToolOptions" -> {
             "DisplayFunction" ->
              (Function[
               {
                (Identity[#1] & )[Part[#1, 1]],
                (Identity[#1] & )[Part[#1, 2]]
               }
              ]),
             "CopiedValueFunction" ->
              (Function[
               {
                (Identity[#1] & )[Part[#1, 1]],
                (Identity[#1] & )[Part[#1, 2]]
               }
              ])
            }
           },
           PlotRange -> {{0, 10}, {0.0, 40.408}},
           PlotRangeClipping -> False,
           PlotRangePadding -> {
            {Scaled[0.02], Scaled[0.02]},
            {Scaled[0.05], Scaled[0.080902]}
           },
           Ticks -> {Automatic, Automatic}
          ]
         ],
         "Output"
        ]
       },
       Open
      ]
     ],
     Cell[
      "That\[CloseCurlyQuote]s no fun, nor is it easy to understand, so it\[CloseCurlyQuote]s better to plot y vs. x, or a parametric plot:",
      "Text"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "ParametricPlot",
            "[",
            RowBox[
             {
              RowBox[
               {
                "{",
                RowBox[
                 {
                  RowBox[{"x", "[", "t", "]"}],
                  ",",
                  " ",
                  RowBox[{"y", "[", "t", "]"}]
                 }
                ],
                "}"
               }
              ],
              ",",
              " ",
              RowBox[
               {"{", RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}
              ],
              ",",
              " ",
              RowBox[
               {
                "PlotRange",
                "->",
                RowBox[
                 {
                  "{",
                  RowBox[
                   {
                    "Automatic",
                    ",",
                    " ",
                    RowBox[{"{", RowBox[{"0", ",", " ", "4"}], "}"}]
                   }
                  ],
                  "}"
                 }
                ]
               }
              ]
             }
            ],
            "]"
           }
          ]
         ],
         "Input"
        ],
        Cell[
         BoxData[
          GraphicsBox[
           {
            {
             { },
             { },
             TagBox[
              {
               RGBColor[0.36842, 0.50678, 0.7098],
               AbsoluteThickness[1.6],
               Opacity[1.0],
               FaceForm[Opacity[0.3]],
               LineBox[
                CompressedData[
                 "\n1:eJwtmnc8lt//x637voySnb33uu15c943SlalUImyykxSlERIRHbSIEkqK5KG\nJG0SoTLKXkki121v3+vz+P36R8/HfV3Xea/zPud1HkfK4/ieI0wMDAyZzAwM\n//39v384+v//QH9thJCqFo5sZq5JDoxuoDZVo9caXjhSKZQ5/+bLBurbLPj4\nfT2OfD8NTsZkb6DeaDtXrmQ6Gnsju59ffwPd6H5tack1g0brGC/eD1xHz3fE\nwt6lOaQgxTqqNLiK9nzcEui6fwXhIQ5FjINLKG1qt6VT7ArqvLa6daB+CZn9\nuOgt+2gFTTrUJLWWLaHYY0uLgK0iLt/W4rFzS0jA1nggsnIVNQbn31oTWkKf\n+dvtVVjWEUvU/vrFfYtoyGZm9J45A+Q95+wV/jWPXmxWsBLaxwB8I2O73zXP\no2hOv4owPwbIarntE1s1j0KtQ6cY0xlg6rDKxQNJ80jnxVqpVi8DDAwaBOzU\nnUecOv4GysGMMP3i0pMbSXMoaU00UTaVCTQ6294775lFJUOYu8VtJohxj14j\n02ZR16hZpFM5EzD4/BpppcyiPlb/cfsWJlhnOedXu3kW1RTZKBZyMoMtx68N\nlsYZ9LhsZ+7vRGb49vVEs5fNDPonkWqkf5MZHn1Uzt0wnkEmKdQHZ4uYIbFJ\nrrxadQYJqn/c31vPDMIMw+oZnDPo5edzM3wsLPBPNabh8/dpdKnzvoTXWRYo\n92kOi/GaRnvi5besXWIB0aXcV1r7ptHDzpnTl6+xgMfDL7Ek62nU6X9eJuEJ\nC5wKFpbm1ZhGP75sG2f/xwI3OTcpfFujo6n5C5/gMAm2W10uWb5NR/9sXY6a\nHiOBZlvV+mAmHQ0xz4N2OAkuJ5q+mUygI1XpaEnmayR4xFe6GnyKjjhf61Wb\nNpOA9Q3NRt+Gjs5Z9sshYzKc+eSS8moDR6Oz4bfP7iDDU93uuzILOLqZcPNk\nuSMZLvWcpZb9w1GSsvMtUhAZArbiOzT7cORJ0RP0LiBDaO/8Al6Lo1N87+KC\nKsjgp0rZE/EcRwXtTrqnaslQSBH9rP4IR1/Gg+v8fpChseLJAcZ8HE1E245u\n3YQBPnX629F4HJFeZMTMC2IgIOy1IBaNo2jzUctWOQx21XLVLp/FkSBV+n0I\nwuAfz5S/3HEcbRM4+ORyMAZVXy+3wQEcvSXJfd1+HgPnzLpMeQcc6bbiTOuX\n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\ngDR3+4tXvOjof2uQZBI=\n       "
                ]
               ]
              },
              Annotation[#1, "Charting`Private`Tag$19446#1"] &
             ]
            },
            { }
           },
           Axes -> {True, True},
           AxesLabel -> {None, None},
           AxesOrigin -> {0, 0},
           DisplayFunction -> Identity,
           FrameLabel -> {{None, None}, {None, None}},
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}},
           GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
           ImagePadding -> All,
           ImageSize -> {432.1, Automatic},
           Method -> {
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2,
             "TrackMousePosition" -> {True, False},
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2},
              "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
               "freeformCursorMode" -> True,
               "placement" -> {"x" -> "All", "y" -> "None"}
              }
             }
            },
            "ScalingFunctions" -> None
           },
           PlotRange -> {{0.0, 40.408}, {0, 4}},
           PlotRangeClipping -> True,
           PlotRangePadding -> {{Scaled[0.05], Scaled[0.05]}, {0, 0}},
           Ticks -> {Automatic, Automatic}
          ]
         ],
         "Output"
        ]
       },
       Open
      ]
     ],
     Cell[
      "We can animate both of these together, so we can see how the dot moves over time:",
      "Text"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          {
           RowBox[
            {
             RowBox[
              {
               "plot",
               " ",
               "=",
               " ",
               RowBox[
                {
                 "Plot",
                 "[",
                 RowBox[
                  {
                   RowBox[
                    {
                     "{",
                     RowBox[
                      {
                       RowBox[{"x", "[", "t", "]"}],
                       ",",
                       " ",
                       RowBox[{"y", "[", "t", "]"}]
                      }
                     ],
                     "}"
                    }
                   ],
                   ",",
                   " ",
                   RowBox[
                    {"{", RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}
                   ],
                   ",",
                   " ",
                   RowBox[{"PlotLabels", "->", "\"Expressions\""}]
                  }
                 ],
                 "]"
                }
               ]
              }
             ],
             ";"
            }
           ],
           "\[IndentingNewLine]",
           RowBox[
            {
             RowBox[
              {
               "paramPlot",
               "=",
               RowBox[
                {
                 "ParametricPlot",
                 "[",
                 RowBox[
                  {
                   RowBox[
                    {
                     "{",
                     RowBox[
                      {
                       RowBox[{"x", "[", "t", "]"}],
                       ",",
                       RowBox[{"y", "[", "t", "]"}]
                      }
                     ],
                     "}"
                    }
                   ],
                   ",",
                   RowBox[{"{", RowBox[{"t", ",", "0", ",", "10"}], "}"}],
                   ",",
                   " ",
                   RowBox[
                    {
                     "PlotRange",
                     "->",
                     RowBox[
                      {
                       "{",
                       RowBox[
                        {
                         "Automatic",
                         ",",
                         " ",
                         RowBox[{"{", RowBox[{"0", ",", " ", "4"}], "}"}]
                        }
                       ],
                       "}"
                      }
                     ]
                    }
                   ]
                  }
                 ],
                 "]"
                }
               ]
              }
             ],
             ";"
            }
           ],
           "\n",
           RowBox[
            {
             "Animate",
             "[",
             "\[IndentingNewLine]",
             RowBox[
              {
               RowBox[
                {
                 "Show",
                 "[",
                 RowBox[
                  {
                   "plot",
                   ",",
                   " ",
                   RowBox[
                    {
                     "Graphics",
                     "[",
                     RowBox[
                      {
                       "{",
                       RowBox[
                        {
                         RowBox[{"PointSize", "[", "Large", "]"}],
                         ",",
                         "Red",
                         ",",
                         RowBox[
                          {
                           "Point",
                           "[",
                           RowBox[
                            {
                             "Dynamic",
                             "[",
                             RowBox[
                              {
                               "{",
                               RowBox[{"t", ",", " ", RowBox[{"x", "[", "t", "]"}]}],
                               "}"
                              }
                             ],
                             "]"
                            }
                           ],
                           "]"
                          }
                         ]
                        }
                       ],
                       "}"
                      }
                     ],
                     "]"
                    }
                   ],
                   ",",
                   " ",
                   RowBox[
                    {
                     "Graphics",
                     "[",
                     RowBox[
                      {
                       "{",
                       RowBox[
                        {
                         RowBox[{"PointSize", "[", "Large", "]"}],
                         ",",
                         "Red",
                         ",",
                         RowBox[
                          {
                           "Point",
                           "[",
                           RowBox[
                            {
                             "Dynamic",
                             "[",
                             RowBox[
                              {
                               "{",
                               RowBox[{"t", ",", " ", RowBox[{"y", "[", "t", "]"}]}],
                               "}"
                              }
                             ],
                             "]"
                            }
                           ],
                           "]"
                          }
                         ]
                        }
                       ],
                       "}"
                      }
                     ],
                     "]"
                    }
                   ]
                  }
                 ],
                 "]"
                }
               ],
               ",",
               RowBox[
                {
                 "{",
                 RowBox[
                  {
                   "t",
                   ",",
                   "0",
                   ",",
                   "10",
                   ",",
                   RowBox[{"AppearanceElements", "->", "None"}]
                  }
                 ],
                 "}"
                }
               ]
              }
             ],
             "\[IndentingNewLine]",
             "]"
            }
           ],
           "\[IndentingNewLine]",
           RowBox[
            {
             "Animate",
             "[",
             RowBox[
              {
               RowBox[
                {
                 "Show",
                 "[",
                 RowBox[
                  {
                   "paramPlot",
                   ",",
                   RowBox[
                    {
                     "Graphics",
                     "[",
                     RowBox[
                      {
                       "{",
                       RowBox[
                        {
                         RowBox[{"PointSize", "[", "Large", "]"}],
                         ",",
                         "Red",
                         ",",
                         RowBox[
                          {
                           "Point",
                           "[",
                           RowBox[
                            {
                             "Dynamic",
                             "[",
                             RowBox[
                              {
                               "{",
                               RowBox[
                                {
                                 RowBox[{"x", "[", "t", "]"}],
                                 ",",
                                 RowBox[{"y", "[", "t", "]"}]
                                }
                               ],
                               "}"
                              }
                             ],
                             "]"
                            }
                           ],
                           "]"
                          }
                         ]
                        }
                       ],
                       "}"
                      }
                     ],
                     "]"
                    }
                   ]
                  }
                 ],
                 "]"
                }
               ],
               ",",
               RowBox[
                {
                 "{",
                 RowBox[
                  {
                   "t",
                   ",",
                   "0",
                   ",",
                   "10",
                   ",",
                   RowBox[{"AppearanceElements", "->", "None"}]
                  }
                 ],
                 "}"
                }
               ]
              }
             ],
             "\[IndentingNewLine]",
             "]"
            }
           ]
          }
         ],
         "Input"
        ],
        Cell[
         BoxData[
          TagBox[
           StyleBox[
            DynamicModuleBox[
             {
              t$$ = 2.5291,
              Typeset`show$$ = True,
              Typeset`bookmarkList$$ = { },
              Typeset`bookmarkMode$$ = "Menu",
              Typeset`animator$$,
              Typeset`animvar$$ = 1,
              Typeset`name$$ = "\"untitled\"",
              Typeset`specs$$ = {{Hold[t$$], 0, 10}},
              Typeset`size$$ = {360.0, {96.0, 100.0}},
              Typeset`update$$ = 0,
              Typeset`initDone$$,
              Typeset`skipInitDone$$ = True
             },
             DynamicBox[
              Manipulate`ManipulateBoxes[
               1,
               StandardForm,
               "Variables" :> {t$$ = 0},
               "ControllerVariables" :> { },
               "OtherVariables" :> {
                Typeset`show$$,
                Typeset`bookmarkList$$,
                Typeset`bookmarkMode$$,
                Typeset`animator$$,
                Typeset`animvar$$,
                Typeset`name$$,
                Typeset`specs$$,
                Typeset`size$$,
                Typeset`update$$,
                Typeset`initDone$$,
                Typeset`skipInitDone$$
               },
               "Body" :>
                Show[
                 plot,
                 Graphics[
                  {PointSize[Large], Red, Point[Dynamic[{t$$, x[t$$]}]]}
                 ],
                 Graphics[
                  {PointSize[Large], Red, Point[Dynamic[{t$$, y[t$$]}]]}
                 ]
                ],
               "Specifications" :> {
                {
                 t$$,
                 0,
                 10,
                 AppearanceElements -> None,
                 AppearanceElements -> {
                  "ProgressSlider",
                  "PlayPauseButton",
                  "FasterSlowerButtons",
                  "DirectionButton"
                 }
                }
               },
               "Options" :> {
                ControlType -> Animator,
                AppearanceElements -> None,
                DefaultBaseStyle -> "Animate",
                DefaultLabelStyle -> "AnimateLabel",
                SynchronousUpdating -> True,
                ShrinkingDelay -> 10.0
               },
               "DefaultOptions" :> { }
              ],
              ImageSizeCache -> {404.0, {132.0, 138.0}},
              SingleEvaluation -> True
             ],
             Deinitialization :> None,
             DynamicModuleValues :> { },
             SynchronousInitialization -> True,
             UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$},
             UnsavedVariables :> {Typeset`initDone$$},
             UntrackedVariables :> {Typeset`size$$}
            ],
            "Animate",
            Deployed -> True,
            StripOnInput -> False
           ],
           Manipulate`InterpretManipulate[1]
          ]
         ],
         "Output"
        ],
        Cell[
         BoxData[
          TagBox[
           StyleBox[
            DynamicModuleBox[
             {
              t$$ = 2.6154,
              Typeset`show$$ = True,
              Typeset`bookmarkList$$ = { },
              Typeset`bookmarkMode$$ = "Menu",
              Typeset`animator$$,
              Typeset`animvar$$ = 1,
              Typeset`name$$ = "\"untitled\"",
              Typeset`specs$$ = {{Hold[t$$], 0, 10}},
              Typeset`size$$ = {360.0, {25.0, 30.0}},
              Typeset`update$$ = 0,
              Typeset`initDone$$,
              Typeset`skipInitDone$$ = True
             },
             DynamicBox[
              Manipulate`ManipulateBoxes[
               1,
               StandardForm,
               "Variables" :> {t$$ = 0},
               "ControllerVariables" :> { },
               "OtherVariables" :> {
                Typeset`show$$,
                Typeset`bookmarkList$$,
                Typeset`bookmarkMode$$,
                Typeset`animator$$,
                Typeset`animvar$$,
                Typeset`name$$,
                Typeset`specs$$,
                Typeset`size$$,
                Typeset`update$$,
                Typeset`initDone$$,
                Typeset`skipInitDone$$
               },
               "Body" :>
                Show[
                 paramPlot,
                 Graphics[
                  {PointSize[Large], Red, Point[Dynamic[{x[t$$], y[t$$]}]]}
                 ]
                ],
               "Specifications" :> {
                {
                 t$$,
                 0,
                 10,
                 AppearanceElements -> None,
                 AppearanceElements -> {
                  "ProgressSlider",
                  "PlayPauseButton",
                  "FasterSlowerButtons",
                  "DirectionButton"
                 }
                }
               },
               "Options" :> {
                ControlType -> Animator,
                AppearanceElements -> None,
                DefaultBaseStyle -> "Animate",
                DefaultLabelStyle -> "AnimateLabel",
                SynchronousUpdating -> True,
                ShrinkingDelay -> 10.0
               },
               "DefaultOptions" :> { }
              ],
              ImageSizeCache -> {404.0, {62.0, 67.0}},
              SingleEvaluation -> True
             ],
             Deinitialization :> None,
             DynamicModuleValues :> { },
             SynchronousInitialization -> True,
             UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$},
             UnsavedVariables :> {Typeset`initDone$$},
             UntrackedVariables :> {Typeset`size$$}
            ],
            "Animate",
            Deployed -> True,
            StripOnInput -> False
           ],
           Manipulate`InterpretManipulate[1]
          ]
         ],
         "Output"
        ]
       },
       Open
      ]
     ],
     Cell[
      "This is cool, but it would be better to see the wheel rolling, so we will animate that directly.",
      "Text"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          {
           RowBox[
            {
             RowBox[
              {"xend", " ", "=", " ", RowBox[{"x", "[", "10", "]"}]}
             ],
             ";"
            }
           ],
           "\[IndentingNewLine]",
           RowBox[
            {
             "Animate",
             "[",
             "\[IndentingNewLine]",
             RowBox[
              {
               RowBox[
                {
                 "Show",
                 "[",
                 RowBox[
                  {
                   RowBox[
                    {
                     "Graphics",
                     "[",
                     RowBox[
                      {
                       RowBox[
                        {
                         "Circle",
                         "[",
                         RowBox[
                          {
                           RowBox[{"{", RowBox[{"d", ",", " ", "R"}], "}"}],
                           ",",
                           " ",
                           "R"
                          }
                         ],
                         "]"
                        }
                       ],
                       ",",
                       " ",
                       RowBox[{"Axes", "->", "True"}],
                       ",",
                       " ",
                       RowBox[
                        {
                         "PlotRange",
                         "->",
                         RowBox[
                          {
                           "{",
                           RowBox[
                            {
                             RowBox[
                              {"{", RowBox[{RowBox[{"-", "R"}], ",", "xend"}], "}"}
                             ],
                             ",",
                             " ",
                             RowBox[{"{", RowBox[{"0", ",", "4"}], "}"}]
                            }
                           ],
                           "}"
                          }
                         ]
                        }
                       ]
                      }
                     ],
                     "]"
                    }
                   ],
                   ",",
                   " ",
                   RowBox[
                    {
                     "Graphics",
                     "[",
                     RowBox[
                      {
                       "{",
                       RowBox[
                        {
                         RowBox[{"PointSize", "[", "Large", "]"}],
                         ",",
                         "Red",
                         ",",
                         RowBox[
                          {
                           "Point",
                           "[",
                           RowBox[
                            {
                             "Dynamic",
                             "[",
                             RowBox[
                              {
                               "{",
                               RowBox[
                                {
                                 RowBox[{"x", "[", "t", "]"}],
                                 ",",
                                 " ",
                                 RowBox[{"y", "[", "t", "]"}]
                                }
                               ],
                               "}"
                              }
                             ],
                             "]"
                            }
                           ],
                           "]"
                          }
                         ]
                        }
                       ],
                       "}"
                      }
                     ],
                     "]"
                    }
                   ]
                  }
                 ],
                 "]"
                }
               ],
               ",",
               " ",
               "\[IndentingNewLine]",
               RowBox[
                {"{", RowBox[{"d", ",", " ", "0", ",", " ", "xend"}], "}"}
               ],
               ",",
               " ",
               RowBox[
                {"{", RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}
               ]
              }
             ],
             "\[IndentingNewLine]",
             "]"
            }
           ]
          }
         ],
         "Input"
        ],
        Cell[
         BoxData[
          TagBox[
           StyleBox[
            DynamicModuleBox[
             {
              d$$ = 18.945,
              t$$ = 3.7961,
              Typeset`show$$ = True,
              Typeset`bookmarkList$$ = { },
              Typeset`bookmarkMode$$ = "Menu",
              Typeset`animator$$,
              Typeset`animvar$$ = 1,
              Typeset`name$$ = "\"untitled\"",
              Typeset`specs$$ = {{Hold[d$$], 0, 40 + Cos[20]}, {Hold[t$$], 0, 10}},
              Typeset`size$$ = {360.0, {26.0, 31.0}},
              Typeset`update$$ = 0,
              Typeset`initDone$$,
              Typeset`skipInitDone$$ = True
             },
             DynamicBox[
              Manipulate`ManipulateBoxes[
               1,
               StandardForm,
               "Variables" :> {d$$ = 0, t$$ = 0},
               "ControllerVariables" :> { },
               "OtherVariables" :> {
                Typeset`show$$,
                Typeset`bookmarkList$$,
                Typeset`bookmarkMode$$,
                Typeset`animator$$,
                Typeset`animvar$$,
                Typeset`name$$,
                Typeset`specs$$,
                Typeset`size$$,
                Typeset`update$$,
                Typeset`initDone$$,
                Typeset`skipInitDone$$
               },
               "Body" :>
                Show[
                 Graphics[
                  Circle[{d$$, R}, R],
                  Axes -> True,
                  PlotRange -> {{-R, xend}, {0, 4}}
                 ],
                 Graphics[
                  {PointSize[Large], Red, Point[Dynamic[{x[t$$], y[t$$]}]]}
                 ]
                ],
               "Specifications" :> {
                {
                 d$$,
                 0,
                 40 + Cos[20],
                 AppearanceElements -> {
                  "ProgressSlider",
                  "PlayPauseButton",
                  "FasterSlowerButtons",
                  "DirectionButton"
                 }
                },
                {
                 t$$,
                 0,
                 10,
                 AppearanceElements -> {
                  "ProgressSlider",
                  "PlayPauseButton",
                  "FasterSlowerButtons",
                  "DirectionButton"
                 }
                }
               },
               "Options" :> {
                ControlType -> Animator,
                AppearanceElements -> None,
                DefaultBaseStyle -> "Animate",
                DefaultLabelStyle -> "AnimateLabel",
                SynchronousUpdating -> True,
                ShrinkingDelay -> 10.0
               },
               "DefaultOptions" :> { }
              ],
              ImageSizeCache -> {404.0, {77.0, 83.0}},
              SingleEvaluation -> True
             ],
             Deinitialization :> None,
             DynamicModuleValues :> { },
             SynchronousInitialization -> True,
             UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$},
             UnsavedVariables :> {Typeset`initDone$$},
             UntrackedVariables :> {Typeset`size$$}
            ],
            "Animate",
            Deployed -> True,
            StripOnInput -> False
           ],
           Manipulate`InterpretManipulate[1]
          ]
         ],
         "Output"
        ]
       },
       Open
      ]
     ],
     Cell[
      TextData[
       {
        "We use two variables. The variable t is the standard time with ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[
                {
                 "0",
                 "\[LessEqual]",
                 StyleBox["t", "TI"],
                 "\[LessEqual]",
                 "10"
                }
               ],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "0\\leq t\\leq10",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        ". The variable d, however, is just the x-distance the wheel is travelling. The distance the wheel is travelling has not been parameterized in terms of t, thus we use two variables. We abuse the fact that the circle moves from 0 to the x-position of the dot at 10 seconds, ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[
                {SubscriptBox[StyleBox["x", "TI"], "dot"], "(", "10", ")"}
               ],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "x_{\\mbox{dot}}\\left(10\\right)",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        ". Now let\[CloseCurlyQuote]s use this animation to trace the path of the dot."
       }
      ],
      "Text"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "Animate",
            "[",
            "\[IndentingNewLine]",
            RowBox[
             {
              RowBox[
               {
                "Show",
                "[",
                RowBox[
                 {
                  RowBox[
                   {
                    "Graphics",
                    "[",
                    RowBox[
                     {
                      RowBox[
                       {
                        "Circle",
                        "[",
                        RowBox[
                         {
                          RowBox[{"{", RowBox[{"d", ",", " ", "R"}], "}"}],
                          ",",
                          " ",
                          "R"
                         }
                        ],
                        "]"
                       }
                      ],
                      ",",
                      " ",
                      RowBox[{"Axes", "->", "True"}],
                      ",",
                      " ",
                      RowBox[
                       {
                        "PlotRange",
                        "->",
                        RowBox[
                         {
                          "{",
                          RowBox[
                           {
                            RowBox[
                             {"{", RowBox[{RowBox[{"-", "R"}], ",", "xend"}], "}"}
                            ],
                            ",",
                            " ",
                            RowBox[{"{", RowBox[{"0", ",", "4"}], "}"}]
                           }
                          ],
                          "}"
                         }
                        ]
                       }
                      ]
                     }
                    ],
                    "]"
                   }
                  ],
                  ",",
                  " ",
                  RowBox[
                   {
                    "Graphics",
                    "[",
                    RowBox[
                     {
                      "{",
                      RowBox[
                       {
                        RowBox[{"PointSize", "[", "Large", "]"}],
                        ",",
                        "Red",
                        ",",
                        RowBox[
                         {
                          "Point",
                          "[",
                          RowBox[
                           {
                            "Dynamic",
                            "[",
                            RowBox[
                             {
                              "{",
                              RowBox[
                               {
                                RowBox[{"x", "[", "t", "]"}],
                                ",",
                                " ",
                                RowBox[{"y", "[", "t", "]"}]
                               }
                              ],
                              "}"
                             }
                            ],
                            "]"
                           }
                          ],
                          "]"
                         }
                        ]
                       }
                      ],
                      "}"
                     }
                    ],
                    "]"
                   }
                  ],
                  ",",
                  "\[IndentingNewLine]",
                  RowBox[
                   {
                    "ParametricPlot",
                    "[",
                    RowBox[
                     {
                      RowBox[
                       {
                        "{",
                        RowBox[
                         {
                          RowBox[{"x", "[", "a", "]"}],
                          ",",
                          RowBox[{"y", "[", "a", "]"}]
                         }
                        ],
                        "}"
                       }
                      ],
                      ",",
                      RowBox[{"{", RowBox[{"a", ",", "0", ",", "T"}], "}"}],
                      ",",
                      RowBox[{"PlotStyle", "->", "Thick"}]
                     }
                    ],
                    "]"
                   }
                  ]
                 }
                ],
                "]"
               }
              ],
              ",",
              "\[IndentingNewLine]",
              RowBox[
               {"{", RowBox[{"d", ",", " ", "0", ",", " ", "xend"}], "}"}
              ],
              ",",
              " ",
              RowBox[
               {"{", RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}
              ],
              ",",
              " ",
              RowBox[
               {"{", RowBox[{"T", ",", " ", "0", ",", " ", "10"}], "}"}
              ]
             }
            ],
            "\[IndentingNewLine]",
            "]"
           }
          ]
         ],
         "Input"
        ],
        Cell[
         BoxData[
          TagBox[
           StyleBox[
            DynamicModuleBox[
             {
              d$$ = 16.995,
              t$$ = 5.1752,
              T$$ = 6.9356,
              Typeset`show$$ = True,
              Typeset`bookmarkList$$ = { },
              Typeset`bookmarkMode$$ = "Menu",
              Typeset`animator$$,
              Typeset`animvar$$ = 1,
              Typeset`name$$ = "\"untitled\"",
              Typeset`specs$$ = {
               {Hold[d$$], 0, 40 + Cos[20]},
               {Hold[t$$], 0, 10},
               {Hold[T$$], 0, 10}
              },
              Typeset`size$$ = {360.0, {26.0, 31.0}},
              Typeset`update$$ = 0,
              Typeset`initDone$$,
              Typeset`skipInitDone$$ = True
             },
             DynamicBox[
              Manipulate`ManipulateBoxes[
               1,
               StandardForm,
               "Variables" :> {d$$ = 0, t$$ = 0, T$$ = 0},
               "ControllerVariables" :> { },
               "OtherVariables" :> {
                Typeset`show$$,
                Typeset`bookmarkList$$,
                Typeset`bookmarkMode$$,
                Typeset`animator$$,
                Typeset`animvar$$,
                Typeset`name$$,
                Typeset`specs$$,
                Typeset`size$$,
                Typeset`update$$,
                Typeset`initDone$$,
                Typeset`skipInitDone$$
               },
               "Body" :>
                Show[
                 Graphics[
                  Circle[{d$$, R}, R],
                  Axes -> True,
                  PlotRange -> {{-R, xend}, {0, 4}}
                 ],
                 Graphics[
                  {PointSize[Large], Red, Point[Dynamic[{x[t$$], y[t$$]}]]}
                 ],
                 ParametricPlot[
                  {x[a], y[a]},
                  {a, 0, T$$},
                  PlotStyle -> Thick
                 ]
                ],
               "Specifications" :> {
                {
                 d$$,
                 0,
                 40 + Cos[20],
                 AppearanceElements -> {
                  "ProgressSlider",
                  "PlayPauseButton",
                  "FasterSlowerButtons",
                  "DirectionButton"
                 }
                },
                {
                 t$$,
                 0,
                 10,
                 AppearanceElements -> {
                  "ProgressSlider",
                  "PlayPauseButton",
                  "FasterSlowerButtons",
                  "DirectionButton"
                 }
                },
                {
                 T$$,
                 0,
                 10,
                 AppearanceElements -> {
                  "ProgressSlider",
                  "PlayPauseButton",
                  "FasterSlowerButtons",
                  "DirectionButton"
                 }
                }
               },
               "Options" :> {
                ControlType -> Animator,
                AppearanceElements -> None,
                DefaultBaseStyle -> "Animate",
                DefaultLabelStyle -> "AnimateLabel",
                SynchronousUpdating -> True,
                ShrinkingDelay -> 10.0
               },
               "DefaultOptions" :> { }
              ],
              ImageSizeCache -> {404.0, {92.0, 97.0}},
              SingleEvaluation -> True
             ],
             Deinitialization :> None,
             DynamicModuleValues :> { },
             SynchronousInitialization -> True,
             UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$},
             UnsavedVariables :> {Typeset`initDone$$},
             UntrackedVariables :> {Typeset`size$$}
            ],
            "Animate",
            Deployed -> True,
            StripOnInput -> False
           ],
           Manipulate`InterpretManipulate[1]
          ]
         ],
         "Output"
        ]
       },
       Open
      ]
     ],
     Cell[
      TextData[
       {
        "For parametric purposes, we introduced a t and a T. It is important to note that both of these are the same t, and we just defined them differently to not confuse Mathematica (i.e. ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[
                {
                 "0",
                 "\[LessEqual]",
                 StyleBox["t", "TI"],
                 "\[LongEqual]",
                 StyleBox["T", "TI"],
                 "\[LessEqual]",
                 "10"
                }
               ],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "0\\leq t=T\\leq10",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        "). Just by the nature of Mathematica and our approximation of distance for the circle rolling, we do not have a perfect animation, and it does not appear that ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" -> FormBox["\[Rho]", TraditionalForm],
             "errors" -> { },
             "input" -> "\\rho",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        " stays at 1. "
       }
      ],
      "Text"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          {
           RowBox[
            {
             RowBox[{"xcm", "[", "t_", "]"}],
             ":=",
             RowBox[{RowBox[{"-", "R"}], " ", "thetaDot", " ", "t"}]
            }
           ],
           "\[IndentingNewLine]",
           RowBox[
            {
             "Animate",
             "[",
             "\[IndentingNewLine]",
             RowBox[
              {
               RowBox[
                {
                 "Show",
                 "[",
                 RowBox[
                  {
                   RowBox[
                    {
                     "Graphics",
                     "[",
                     RowBox[
                      {
                       RowBox[
                        {
                         "Circle",
                         "[",
                         RowBox[
                          {
                           RowBox[
                            {
                             "{",
                             RowBox[{RowBox[{"xcm", "[", "t", "]"}], ",", " ", "R"}],
                             "}"
                            }
                           ],
                           ",",
                           " ",
                           "R"
                          }
                         ],
                         "]"
                        }
                       ],
                       ",",
                       " ",
                       RowBox[{"Axes", "->", "True"}],
                       ",",
                       " ",
                       RowBox[
                        {
                         "PlotRange",
                         "->",
                         RowBox[
                          {
                           "{",
                           RowBox[
                            {
                             RowBox[
                              {"{", RowBox[{RowBox[{"-", "R"}], ",", "xend"}], "}"}
                             ],
                             ",",
                             " ",
                             RowBox[{"{", RowBox[{"0", ",", "4"}], "}"}]
                            }
                           ],
                           "}"
                          }
                         ]
                        }
                       ]
                      }
                     ],
                     "]"
                    }
                   ],
                   ",",
                   " ",
                   RowBox[
                    {
                     "Graphics",
                     "[",
                     RowBox[
                      {
                       "{",
                       RowBox[
                        {
                         RowBox[{"PointSize", "[", "Large", "]"}],
                         ",",
                         "Red",
                         ",",
                         RowBox[
                          {
                           "Point",
                           "[",
                           RowBox[
                            {
                             "Dynamic",
                             "[",
                             RowBox[
                              {
                               "{",
                               RowBox[
                                {
                                 RowBox[{"x", "[", "t", "]"}],
                                 ",",
                                 " ",
                                 RowBox[{"y", "[", "t", "]"}]
                                }
                               ],
                               "}"
                              }
                             ],
                             "]"
                            }
                           ],
                           "]"
                          }
                         ]
                        }
                       ],
                       "}"
                      }
                     ],
                     "]"
                    }
                   ],
                   ",",
                   "\[IndentingNewLine]",
                   RowBox[
                    {
                     "ParametricPlot",
                     "[",
                     RowBox[
                      {
                       RowBox[
                        {
                         "{",
                         RowBox[
                          {
                           RowBox[{"x", "[", "a", "]"}],
                           ",",
                           RowBox[{"y", "[", "a", "]"}]
                          }
                         ],
                         "}"
                        }
                       ],
                       ",",
                       RowBox[{"{", RowBox[{"a", ",", "0", ",", "T"}], "}"}],
                       ",",
                       RowBox[{"PlotStyle", "->", "Thick"}]
                      }
                     ],
                     "]"
                    }
                   ]
                  }
                 ],
                 "]"
                }
               ],
               ",",
               "\[IndentingNewLine]",
               RowBox[
                {"{", RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}
               ],
               ",",
               " ",
               RowBox[
                {"{", RowBox[{"T", ",", " ", "0", ",", " ", "10"}], "}"}
               ]
              }
             ],
             "\[IndentingNewLine]",
             "]"
            }
           ]
          }
         ],
         "Input"
        ],
        Cell[
         BoxData[
          TagBox[
           StyleBox[
            DynamicModuleBox[
             {
              t$$ = 0.19921,
              T$$ = 1.0682,
              Typeset`show$$ = True,
              Typeset`bookmarkList$$ = { },
              Typeset`bookmarkMode$$ = "Menu",
              Typeset`animator$$,
              Typeset`animvar$$ = 1,
              Typeset`name$$ = "\"untitled\"",
              Typeset`specs$$ = {{Hold[t$$], 0, 10}, {Hold[T$$], 0, 10}},
              Typeset`size$$ = {360.0, {26.0, 31.0}},
              Typeset`update$$ = 0,
              Typeset`initDone$$,
              Typeset`skipInitDone$$ = True
             },
             DynamicBox[
              Manipulate`ManipulateBoxes[
               1,
               StandardForm,
               "Variables" :> {t$$ = 0, T$$ = 0},
               "ControllerVariables" :> { },
               "OtherVariables" :> {
                Typeset`show$$,
                Typeset`bookmarkList$$,
                Typeset`bookmarkMode$$,
                Typeset`animator$$,
                Typeset`animvar$$,
                Typeset`name$$,
                Typeset`specs$$,
                Typeset`size$$,
                Typeset`update$$,
                Typeset`initDone$$,
                Typeset`skipInitDone$$
               },
               "Body" :>
                Show[
                 Graphics[
                  Circle[{xcm[t$$], R}, R],
                  Axes -> True,
                  PlotRange -> {{-R, xend}, {0, 4}}
                 ],
                 Graphics[
                  {PointSize[Large], Red, Point[Dynamic[{x[t$$], y[t$$]}]]}
                 ],
                 ParametricPlot[
                  {x[a], y[a]},
                  {a, 0, T$$},
                  PlotStyle -> Thick
                 ]
                ],
               "Specifications" :> {
                {
                 t$$,
                 0,
                 10,
                 AppearanceElements -> {
                  "ProgressSlider",
                  "PlayPauseButton",
                  "FasterSlowerButtons",
                  "DirectionButton"
                 }
                },
                {
                 T$$,
                 0,
                 10,
                 AppearanceElements -> {
                  "ProgressSlider",
                  "PlayPauseButton",
                  "FasterSlowerButtons",
                  "DirectionButton"
                 }
                }
               },
               "Options" :> {
                ControlType -> Animator,
                AppearanceElements -> None,
                DefaultBaseStyle -> "Animate",
                DefaultLabelStyle -> "AnimateLabel",
                SynchronousUpdating -> True,
                ShrinkingDelay -> 10.0
               },
               "DefaultOptions" :> { }
              ],
              ImageSizeCache -> {404.0, {77.0, 83.0}},
              SingleEvaluation -> True
             ],
             Deinitialization :> None,
             DynamicModuleValues :> { },
             SynchronousInitialization -> True,
             UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$},
             UnsavedVariables :> {Typeset`initDone$$},
             UntrackedVariables :> {Typeset`size$$}
            ],
            "Animate",
            Deployed -> True,
            StripOnInput -> False
           ],
           Manipulate`InterpretManipulate[1]
          ]
         ],
         "Output"
        ]
       },
       Open
      ]
     ],
     Cell[
      TextData[
       {
        "Now, instead of making an approximation of ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" -> FormBox[StyleBox["d", "TI"], TraditionalForm],
             "errors" -> { },
             "input" -> "d",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        ", we can just define a new function that gets the exact position of the center of the circle:\n",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[
                {
                 SubscriptBox[StyleBox["x", "TI"], "cm"],
                 RowBox[{"(", StyleBox["t", "TI"], ")"}],
                 "\[LongEqual]",
                 "-",
                 StyleBox["R", "TI"],
                 OverscriptBox["\[Theta]", "."],
                 StyleBox["t", "TI"]
                }
               ],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "x_{\\mbox{cm}}\\left(t\\right)=-R\\dot{\\theta}t",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        "\nNow we use the same t parameterization for the circle as well, and this animation looks much smoother. Let\[CloseCurlyQuote]s see what we get if ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[{"\[Rho]", "\[LongEqual]", "2"}],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "\\rho=2",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        " and if we place our dot \[OpenCurlyDoubleQuote]outside\[CloseCurlyDoubleQuote] the circle at ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[{"\[Rho]", "\[LongEqual]", "4"}],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "\\rho=4",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        ". Since we manually define the y-axis, we will need to do some tweaking on the hard-coded values."
       }
      ],
      "Text"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          {
           RowBox[{RowBox[{"p", "=", "2"}], ";"}],
           "\[IndentingNewLine]",
           RowBox[
            {
             "Animate",
             "[",
             "\[IndentingNewLine]",
             RowBox[
              {
               RowBox[
                {
                 "Show",
                 "[",
                 RowBox[
                  {
                   RowBox[
                    {
                     "Graphics",
                     "[",
                     RowBox[
                      {
                       RowBox[
                        {
                         "Circle",
                         "[",
                         RowBox[
                          {
                           RowBox[
                            {
                             "{",
                             RowBox[{RowBox[{"xcm", "[", "t", "]"}], ",", " ", "R"}],
                             "}"
                            }
                           ],
                           ",",
                           " ",
                           "R"
                          }
                         ],
                         "]"
                        }
                       ],
                       ",",
                       " ",
                       RowBox[{"Axes", "->", "True"}],
                       ",",
                       " ",
                       RowBox[
                        {
                         "PlotRange",
                         "->",
                         RowBox[
                          {
                           "{",
                           RowBox[
                            {
                             RowBox[
                              {"{", RowBox[{RowBox[{"-", "R"}], ",", "xend"}], "}"}
                             ],
                             ",",
                             " ",
                             RowBox[{"{", RowBox[{"0", ",", "4"}], "}"}]
                            }
                           ],
                           "}"
                          }
                         ]
                        }
                       ]
                      }
                     ],
                     "]"
                    }
                   ],
                   ",",
                   " ",
                   RowBox[
                    {
                     "Graphics",
                     "[",
                     RowBox[
                      {
                       "{",
                       RowBox[
                        {
                         RowBox[{"PointSize", "[", "Large", "]"}],
                         ",",
                         "Red",
                         ",",
                         RowBox[
                          {
                           "Point",
                           "[",
                           RowBox[
                            {
                             "Dynamic",
                             "[",
                             RowBox[
                              {
                               "{",
                               RowBox[
                                {
                                 RowBox[{"x", "[", "t", "]"}],
                                 ",",
                                 " ",
                                 RowBox[{"y", "[", "t", "]"}]
                                }
                               ],
                               "}"
                              }
                             ],
                             "]"
                            }
                           ],
                           "]"
                          }
                         ]
                        }
                       ],
                       "}"
                      }
                     ],
                     "]"
                    }
                   ],
                   ",",
                   "\[IndentingNewLine]",
                   RowBox[
                    {
                     "ParametricPlot",
                     "[",
                     RowBox[
                      {
                       RowBox[
                        {
                         "{",
                         RowBox[
                          {
                           RowBox[{"x", "[", "a", "]"}],
                           ",",
                           RowBox[{"y", "[", "a", "]"}]
                          }
                         ],
                         "}"
                        }
                       ],
                       ",",
                       RowBox[{"{", RowBox[{"a", ",", "0", ",", "T"}], "}"}],
                       ",",
                       RowBox[{"PlotStyle", "->", "Thick"}]
                      }
                     ],
                     "]"
                    }
                   ]
                  }
                 ],
                 "]"
                }
               ],
               ",",
               "\[IndentingNewLine]",
               RowBox[
                {"{", RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}
               ],
               ",",
               " ",
               RowBox[
                {"{", RowBox[{"T", ",", " ", "0", ",", " ", "10"}], "}"}
               ]
              }
             ],
             "\[IndentingNewLine]",
             "]"
            }
           ]
          }
         ],
         "Input"
        ],
        Cell[
         BoxData[
          TagBox[
           StyleBox[
            DynamicModuleBox[
             {
              t$$ = 4.1207,
              T$$ = 4.9039,
              Typeset`show$$ = True,
              Typeset`bookmarkList$$ = { },
              Typeset`bookmarkMode$$ = "Menu",
              Typeset`animator$$,
              Typeset`animvar$$ = 1,
              Typeset`name$$ = "\"untitled\"",
              Typeset`specs$$ = {{Hold[t$$], 0, 10}, {Hold[T$$], 0, 10}},
              Typeset`size$$ = {360.0, {26.0, 31.0}},
              Typeset`update$$ = 0,
              Typeset`initDone$$,
              Typeset`skipInitDone$$ = True
             },
             DynamicBox[
              Manipulate`ManipulateBoxes[
               1,
               StandardForm,
               "Variables" :> {t$$ = 0, T$$ = 0},
               "ControllerVariables" :> { },
               "OtherVariables" :> {
                Typeset`show$$,
                Typeset`bookmarkList$$,
                Typeset`bookmarkMode$$,
                Typeset`animator$$,
                Typeset`animvar$$,
                Typeset`name$$,
                Typeset`specs$$,
                Typeset`size$$,
                Typeset`update$$,
                Typeset`initDone$$,
                Typeset`skipInitDone$$
               },
               "Body" :>
                Show[
                 Graphics[
                  Circle[{xcm[t$$], R}, R],
                  Axes -> True,
                  PlotRange -> {{-R, xend}, {0, 4}}
                 ],
                 Graphics[
                  {PointSize[Large], Red, Point[Dynamic[{x[t$$], y[t$$]}]]}
                 ],
                 ParametricPlot[
                  {x[a], y[a]},
                  {a, 0, T$$},
                  PlotStyle -> Thick
                 ]
                ],
               "Specifications" :> {
                {
                 t$$,
                 0,
                 10,
                 AppearanceElements -> {
                  "ProgressSlider",
                  "PlayPauseButton",
                  "FasterSlowerButtons",
                  "DirectionButton"
                 }
                },
                {
                 T$$,
                 0,
                 10,
                 AppearanceElements -> {
                  "ProgressSlider",
                  "PlayPauseButton",
                  "FasterSlowerButtons",
                  "DirectionButton"
                 }
                }
               },
               "Options" :> {
                ControlType -> Animator,
                AppearanceElements -> None,
                DefaultBaseStyle -> "Animate",
                DefaultLabelStyle -> "AnimateLabel",
                SynchronousUpdating -> True,
                ShrinkingDelay -> 10.0
               },
               "DefaultOptions" :> { }
              ],
              ImageSizeCache -> {404.0, {77.0, 83.0}},
              SingleEvaluation -> True
             ],
             Deinitialization :> None,
             DynamicModuleValues :> { },
             SynchronousInitialization -> True,
             UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$},
             UnsavedVariables :> {Typeset`initDone$$},
             UntrackedVariables :> {Typeset`size$$}
            ],
            "Animate",
            Deployed -> True,
            StripOnInput -> False
           ],
           Manipulate`InterpretManipulate[1]
          ]
         ],
         "Output"
        ]
       },
       Open
      ]
     ],
     Cell[
      TextData[
       {
        "You can see that when ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[{"\[Rho]", "\[LongEqual]", "2"}],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "\\rho=2",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        ", we get the expected \[OpenCurlyDoubleQuote]semi-circle\[CloseCurlyDoubleQuote] (a better phrasing would be semi-circle-",
        StyleBox["esque", FontSlant -> "Italic"],
        "). "
       }
      ],
      "Text"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "ParametricPlot",
            "[",
            RowBox[
             {
              RowBox[
               {
                "{",
                RowBox[
                 {
                  RowBox[{"x", "[", "t", "]"}],
                  ",",
                  RowBox[{"y", "[", "t", "]"}]
                 }
                ],
                "}"
               }
              ],
              ",",
              RowBox[{"{", RowBox[{"t", ",", "0", ",", "10"}], "}"}],
              ",",
              RowBox[{"PlotStyle", "->", "Thick"}]
             }
            ],
            "]"
           }
          ]
         ],
         "Input"
        ],
        Cell[
         BoxData[
          GraphicsBox[
           {
            {
             { },
             { },
             TagBox[
              {
               RGBColor[0.36842, 0.50678, 0.7098],
               Thickness[Large],
               Opacity[1.0],
               FaceForm[Opacity[0.3]],
               LineBox[
                CompressedData[
                 "\n1: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\nTjag/wPrOINB\n       "
                ]
               ]
              },
              Annotation[#1, "Charting`Private`Tag$208973#1"] &
             ]
            },
            { }
           },
           Axes -> {True, True},
           AxesLabel -> {None, None},
           AxesOrigin -> {0, 0},
           DisplayFunction -> Identity,
           FrameLabel -> {{None, None}, {None, None}},
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}},
           GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
           ImagePadding -> All,
           Method -> {
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2,
             "TrackMousePosition" -> {True, False},
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2},
              "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
               "freeformCursorMode" -> True,
               "placement" -> {"x" -> "All", "y" -> "None"}
              }
             }
            },
            "ScalingFunctions" -> None
           },
           PlotRange -> {{0.0, 40.816}, {0.0, 4.0}},
           PlotRangeClipping -> True,
           PlotRangePadding -> {
            {Scaled[0.05], Scaled[0.05]},
            {Scaled[0.05], Scaled[0.05]}
           },
           Ticks -> {Automatic, Automatic}
          ]
         ],
         "Output"
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "Plot",
            "[",
            RowBox[
             {
              RowBox[
               {
                "{",
                RowBox[
                 {
                  RowBox[{"x", "[", "t", "]"}],
                  ",",
                  " ",
                  RowBox[{"y", "[", "t", "]"}]
                 }
                ],
                "}"
               }
              ],
              ",",
              " ",
              RowBox[
               {"{", RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}
              ],
              ",",
              " ",
              RowBox[{"PlotLabels", "->", "\"Expressions\""}]
             }
            ],
            "]"
           }
          ]
         ],
         "Input"
        ],
        Cell[
         BoxData[
          GraphicsBox[
           {
            {
             { },
             { },
             TagBox[
              {
               RGBColor[0.36842, 0.50678, 0.7098],
               AbsoluteThickness[1.6],
               Opacity[1.0],
               LineBox[
                CompressedData[
                 "\n1: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\nQmcLoA==\n       "
                ]
               ]
              },
              Annotation[#1, "Charting`Private`Tag$209016#1"] &
             ],
             TagBox[
              {
               RGBColor[0.88072, 0.61104, 0.14205],
               AbsoluteThickness[1.6],
               Opacity[1.0],
               LineBox[
                CompressedData[
                 "\n1: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\nqqZw+0wkPoIY9PIJUElwSZpTykCD13Rdsj7g9W/oHhDhSUfnr9w8frYKr8+Q\n6X9g9Cmi6bmb+rQOLz/dZ5zZ9wR90YujnGvB57/Ro9Y/nIikdN63xPXjcYtz\nWVGy8Wi0/qv82BBev9L/ModnHHp6ujvx6ATe/+naCNuWGMSAVi0GlvH6raF5\nzO7hyFtFnO7jJu4Aj9bMayFoXO1qfjQ5fq6JtcEv3wdIXyNK354O92uRO99q\n7qHqM1Wbqhhuv/2+VqcCkaz2SjofF26XHOXbDX4o9ZyY5hof7sW21FLPW4hJ\n1/hvmzDu44HfogLcka9e5KNcSdz5iplUrS5oUr/y+H053Ep9ySpG9sjw8vKg\nyTHcduy2EylWqOaKaLAiwk38mc2sbIrkTa5IsWjg7j7KbFqsj9LNIjqndHDT\nnad+fUEbESwqvL9ewn0mwZtHEJC/1ZJAijHuQDauJx4yaOb6gW9eFrjJLAVP\nXeBAxnZGN3Tt/rf4+r7iTuV6h3BWSZf/XecrsL6qrOhUXkzphbvy6wWf50SU\n5bJo+ssft7n2aW/SEcTmJkJVfB/3UGiC5oQaCvS4nBcThpvqXLY8ly6a8wrT\ndYjFLX46a/3tZWTi82VNDb+Hk21qf3ExN0eNfgvP+NP+N5y1ybqOjt0RVvuH\nn/NkjW+D2p/fQNmBhlPtr3HPqTiel7mJOO6HRue9x13GVHN12gPde1B2JAi/\nR5C1lhpRU/qghYfzP02rcHPViyKf26g5wkCctQ335B0K7or76ER0SOv0dwwC\nk4z6LIODUU5sqUfNAO6pxw5X/ENRUAKp6hZ+bya7lXpLeCUaLSXp217E71nA\nm72z+DkWmT99yHwQv7cFCr7J4nj0CAm0r0nNU7AAWZ7dScbQRGRwkYXMhIYF\nQNU4siv7CYrolOiqp2eBQIV99HU/n6LNbhOfTBYWIJaqvgo7nY56+qq/GQiw\nQOUp+QL1gBeI+epAUjWJBdI5Sb7u09lIfWD1hswB3Ms2KjwWOajwtzgbvRTu\nCyp+5a6vUNRIlFnZcbz/w2kJrkzv0DfrHDmJUyywcNxWJmf+Hdoeq6JKALx8\nyE5tSG8hcphcyXPRZAGWPDbFE6UfkOZf439CBiwgWy5zHqv5hFI57ncFGOHj\nkVjiRG0laOXkq7cDV/G4SfnFlsHPKD1syzbBkgWGONWZNli+oE2xZ730rixg\n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\nOkpRh8qXRTf29vDyxj7Ek2dr0X+Rg0Db\n       "
                ]
               ]
              },
              Annotation[#1, "Charting`Private`Tag$209016#2"] &
             ]
            },
            {
             {
              { },
              {
               GraphicsGroupBox[
                {
                 {
                  GrayLevel[1],
                  AbsoluteThickness[4],
                  Opacity[NCache[Rational[2, 3], 0.66667]],
                  CapForm["Butt"],
                  JoinForm["Round"],
                  BSplineCurveBox[
                   {
                    Offset[{3, 0}, {10.0, 40.816}],
                    Offset[{3.0, 0.0}, {10.408, 40.816}],
                    Offset[{0, 0}, {10.634, 40.816}],
                    Offset[{5.0, 0.0}, {10.634, 40.816}],
                    Offset[{10.0, 0.0}, {10.634, 40.816}],
                    Offset[{10.0, 0.0}, {10.634, 40.816}]
                   }
                  ]
                 },
                 {
                  RGBColor[0.66667, 0.66667, 0.66667],
                  AbsoluteThickness[1.25],
                  BSplineCurveBox[
                   {
                    Offset[{3, 0}, {10.0, 40.816}],
                    Offset[{3.0, 0.0}, {10.408, 40.816}],
                    Offset[{0, 0}, {10.634, 40.816}],
                    Offset[{5.0, 0.0}, {10.634, 40.816}],
                    Offset[{10.0, 0.0}, {10.634, 40.816}],
                    Offset[{10.0, 0.0}, {10.634, 40.816}]
                   }
                  ]
                 },
                 {
                  EdgeForm[None],
                  FaceForm[
                   {GrayLevel[1], Opacity[NCache[Rational[2, 3], 0.66667]]}
                  ],
                  PolygonBox[
                   {
                    Offset[{30.0, 9.5}, {10.634, 40.816}],
                    Offset[{30.0, -9.5}, {10.634, 40.816}],
                    Offset[{10.0, -9.5}, {10.634, 40.816}],
                    Offset[{10.0, 9.5}, {10.634, 40.816}]
                   }
                  ]
                 },
                 {
                  RGBColor[0.66667, 0.66667, 0.66667],
                  AbsoluteThickness[1.25],
                  EdgeForm[None]
                 },
                 { },
                 InsetBox[
                  StyleBox[
                   RotationBox[
                    TagBox[
                     RowBox[{"x", "(", TagBox["t", HoldForm], ")"}],
                     HoldForm
                    ],
                    BoxRotation -> 0.0
                   ],
                   StripOnInput -> False,
                   LineOpacity -> 1,
                   FrontFaceOpacity -> 1,
                   BackFaceOpacity -> 1,
                   Opacity -> 1,
                   FontOpacity -> 1
                  ],
                  Offset[{20.0, 0.0}, {10.634, 40.816}],
                  NCache[
                   ImageScaled[{Rational[1, 2], Rational[1, 2]}],
                   ImageScaled[{0.5, 0.5}]
                  ]
                 ]
                }
               ],
               GraphicsGroupBox[
                {
                 {
                  GrayLevel[1],
                  AbsoluteThickness[4],
                  Opacity[NCache[Rational[2, 3], 0.66667]],
                  CapForm["Butt"],
                  JoinForm["Round"],
                  BSplineCurveBox[
                   {
                    Offset[{3, 0}, {10.0, 0.17411}],
                    Offset[{2.9346, 0.62314}, {10.408, 0.17411}],
                    Offset[{0, 0}, {10.634, 0.49086}],
                    Offset[{5.0, 0.0}, {10.634, 0.49086}],
                    Offset[{10.0, 0.0}, {10.634, 0.49086}],
                    Offset[{10.0, 0.0}, {10.634, 0.49086}]
                   }
                  ]
                 },
                 {
                  RGBColor[0.66667, 0.66667, 0.66667],
                  AbsoluteThickness[1.25],
                  BSplineCurveBox[
                   {
                    Offset[{3, 0}, {10.0, 0.17411}],
                    Offset[{2.9346, 0.62314}, {10.408, 0.17411}],
                    Offset[{0, 0}, {10.634, 0.49086}],
                    Offset[{5.0, 0.0}, {10.634, 0.49086}],
                    Offset[{10.0, 0.0}, {10.634, 0.49086}],
                    Offset[{10.0, 0.0}, {10.634, 0.49086}]
                   }
                  ]
                 },
                 {
                  EdgeForm[None],
                  FaceForm[
                   {GrayLevel[1], Opacity[NCache[Rational[2, 3], 0.66667]]}
                  ],
                  PolygonBox[
                   {
                    Offset[{30.0, 9.5}, {10.634, 0.49086}],
                    Offset[{30.0, -9.5}, {10.634, 0.49086}],
                    Offset[{10.0, -9.5}, {10.634, 0.49086}],
                    Offset[{10.0, 9.5}, {10.634, 0.49086}]
                   }
                  ]
                 },
                 {
                  RGBColor[0.66667, 0.66667, 0.66667],
                  AbsoluteThickness[1.25],
                  EdgeForm[None]
                 },
                 { },
                 InsetBox[
                  StyleBox[
                   RotationBox[
                    TagBox[
                     RowBox[{"y", "(", TagBox["t", HoldForm], ")"}],
                     HoldForm
                    ],
                    BoxRotation -> 0.0
                   ],
                   StripOnInput -> False,
                   LineOpacity -> 1,
                   FrontFaceOpacity -> 1,
                   BackFaceOpacity -> 1,
                   Opacity -> 1,
                   FontOpacity -> 1
                  ],
                  Offset[{20.0, 0.0}, {10.634, 0.49086}],
                  NCache[
                   ImageScaled[{Rational[1, 2], Rational[1, 2]}],
                   ImageScaled[{0.5, 0.5}]
                  ]
                 ]
                }
               ]
              }
             },
             { }
            }
           },
           AspectRatio -> NCache[GoldenRatio^(-1), 0.61803],
           Axes -> {True, True},
           AxesLabel -> {None, None},
           AxesOrigin -> {0, 0},
           DisplayFunction -> Identity,
           Frame -> {{False, False}, {False, False}},
           FrameLabel -> {{None, None}, {None, None}},
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}},
           GridLines -> {None, None},
           GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
           ImagePadding -> {{All, 49.331}, {All, All}},
           Method -> {
            "DefaultBoundaryStyle" -> Automatic,
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2,
             "TrackMousePosition" -> {True, False},
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2},
              "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
               "freeformCursorMode" -> True,
               "placement" -> {"x" -> "All", "y" -> "None"}
              }
             }
            },
            "DefaultMeshStyle" -> AbsolutePointSize[6],
            "ScalingFunctions" -> None,
            "CoordinatesToolOptions" -> {
             "DisplayFunction" ->
              (Function[
               {
                (Identity[#1] & )[Part[#1, 1]],
                (Identity[#1] & )[Part[#1, 2]]
               }
              ]),
             "CopiedValueFunction" ->
              (Function[
               {
                (Identity[#1] & )[Part[#1, 1]],
                (Identity[#1] & )[Part[#1, 2]]
               }
              ])
            }
           },
           PlotRange -> {{0, 10}, {0.0, 40.816}},
           PlotRangeClipping -> False,
           PlotRangePadding -> {
            {Scaled[0.02], Scaled[0.02]},
            {Scaled[0.05], Scaled[0.080902]}
           },
           Ticks -> {Automatic, Automatic}
          ]
         ],
         "Output"
        ]
       },
       Open
      ]
     ],
     Cell[
      TextData[
       {
        "Now let\[CloseCurlyQuote]s try ",
        Cell[
         BoxData[
          FormBox[
           TemplateBox[
            <|
             "boxes" ->
              FormBox[
               RowBox[{"\[Rho]", "\[LongEqual]", "4"}],
               TraditionalForm
              ],
             "errors" -> { },
             "input" -> "\\rho=4",
             "state" -> "Boxes"
            |>,
            "TeXAssistantTemplate"
           ],
           TraditionalForm
          ]
         ]
        ],
        ":"
       }
      ],
      "Text"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          {
           RowBox[{RowBox[{"p", "=", "4"}], ";"}],
           "\[IndentingNewLine]",
           RowBox[
            {
             "Animate",
             "[",
             "\[IndentingNewLine]",
             RowBox[
              {
               RowBox[
                {
                 "Show",
                 "[",
                 RowBox[
                  {
                   RowBox[
                    {
                     "Graphics",
                     "[",
                     RowBox[
                      {
                       RowBox[
                        {
                         "Circle",
                         "[",
                         RowBox[
                          {
                           RowBox[
                            {
                             "{",
                             RowBox[{RowBox[{"xcm", "[", "t", "]"}], ",", " ", "R"}],
                             "}"
                            }
                           ],
                           ",",
                           " ",
                           "R"
                          }
                         ],
                         "]"
                        }
                       ],
                       ",",
                       " ",
                       RowBox[{"Axes", "->", "True"}],
                       ",",
                       " ",
                       RowBox[
                        {
                         "PlotRange",
                         "->",
                         RowBox[
                          {
                           "{",
                           RowBox[
                            {
                             RowBox[
                              {"{", RowBox[{RowBox[{"-", "R"}], ",", "xend"}], "}"}
                             ],
                             ",",
                             " ",
                             RowBox[{"{", RowBox[{RowBox[{"-", "2"}], ",", "6"}], "}"}]
                            }
                           ],
                           "}"
                          }
                         ]
                        }
                       ]
                      }
                     ],
                     "]"
                    }
                   ],
                   ",",
                   " ",
                   RowBox[
                    {
                     "Graphics",
                     "[",
                     RowBox[
                      {
                       "{",
                       RowBox[
                        {
                         RowBox[{"PointSize", "[", "Large", "]"}],
                         ",",
                         "Red",
                         ",",
                         RowBox[
                          {
                           "Point",
                           "[",
                           RowBox[
                            {
                             "Dynamic",
                             "[",
                             RowBox[
                              {
                               "{",
                               RowBox[
                                {
                                 RowBox[{"x", "[", "t", "]"}],
                                 ",",
                                 " ",
                                 RowBox[{"y", "[", "t", "]"}]
                                }
                               ],
                               "}"
                              }
                             ],
                             "]"
                            }
                           ],
                           "]"
                          }
                         ]
                        }
                       ],
                       "}"
                      }
                     ],
                     "]"
                    }
                   ],
                   ",",
                   "\[IndentingNewLine]",
                   RowBox[
                    {
                     "ParametricPlot",
                     "[",
                     RowBox[
                      {
                       RowBox[
                        {
                         "{",
                         RowBox[
                          {
                           RowBox[{"x", "[", "a", "]"}],
                           ",",
                           RowBox[{"y", "[", "a", "]"}]
                          }
                         ],
                         "}"
                        }
                       ],
                       ",",
                       RowBox[{"{", RowBox[{"a", ",", "0", ",", "T"}], "}"}],
                       ",",
                       RowBox[{"PlotStyle", "->", "Thick"}]
                      }
                     ],
                     "]"
                    }
                   ]
                  }
                 ],
                 "]"
                }
               ],
               ",",
               "\[IndentingNewLine]",
               RowBox[
                {"{", RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}
               ],
               ",",
               " ",
               RowBox[
                {"{", RowBox[{"T", ",", " ", "0", ",", " ", "10"}], "}"}
               ]
              }
             ],
             "\[IndentingNewLine]",
             "]"
            }
           ]
          }
         ],
         "Input"
        ],
        Cell[
         BoxData[
          TagBox[
           StyleBox[
            DynamicModuleBox[
             {
              t$$ = 4.8537,
              T$$ = 5.933,
              Typeset`show$$ = True,
              Typeset`bookmarkList$$ = { },
              Typeset`bookmarkMode$$ = "Menu",
              Typeset`animator$$,
              Typeset`animvar$$ = 1,
              Typeset`name$$ = "\"untitled\"",
              Typeset`specs$$ = {{Hold[t$$], 0, 10}, {Hold[T$$], 0, 10}},
              Typeset`size$$ = {360.0, {38.0, 43.0}},
              Typeset`update$$ = 0,
              Typeset`initDone$$,
              Typeset`skipInitDone$$ = True
             },
             DynamicBox[
              Manipulate`ManipulateBoxes[
               1,
               StandardForm,
               "Variables" :> {t$$ = 0, T$$ = 0},
               "ControllerVariables" :> { },
               "OtherVariables" :> {
                Typeset`show$$,
                Typeset`bookmarkList$$,
                Typeset`bookmarkMode$$,
                Typeset`animator$$,
                Typeset`animvar$$,
                Typeset`name$$,
                Typeset`specs$$,
                Typeset`size$$,
                Typeset`update$$,
                Typeset`initDone$$,
                Typeset`skipInitDone$$
               },
               "Body" :>
                Show[
                 Graphics[
                  Circle[{xcm[t$$], R}, R],
                  Axes -> True,
                  PlotRange -> {{-R, xend}, {-2, 6}}
                 ],
                 Graphics[
                  {PointSize[Large], Red, Point[Dynamic[{x[t$$], y[t$$]}]]}
                 ],
                 ParametricPlot[
                  {x[a], y[a]},
                  {a, 0, T$$},
                  PlotStyle -> Thick
                 ]
                ],
               "Specifications" :> {
                {
                 t$$,
                 0,
                 10,
                 AppearanceElements -> {
                  "ProgressSlider",
                  "PlayPauseButton",
                  "FasterSlowerButtons",
                  "DirectionButton"
                 }
                },
                {
                 T$$,
                 0,
                 10,
                 AppearanceElements -> {
                  "ProgressSlider",
                  "PlayPauseButton",
                  "FasterSlowerButtons",
                  "DirectionButton"
                 }
                }
               },
               "Options" :> {
                ControlType -> Animator,
                AppearanceElements -> None,
                DefaultBaseStyle -> "Animate",
                DefaultLabelStyle -> "AnimateLabel",
                SynchronousUpdating -> True,
                ShrinkingDelay -> 10.0
               },
               "DefaultOptions" :> { }
              ],
              ImageSizeCache -> {404.0, {89.0, 95.0}},
              SingleEvaluation -> True
             ],
             Deinitialization :> None,
             DynamicModuleValues :> { },
             SynchronousInitialization -> True,
             UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$},
             UnsavedVariables :> {Typeset`initDone$$},
             UntrackedVariables :> {Typeset`size$$}
            ],
            "Animate",
            Deployed -> True,
            StripOnInput -> False
           ],
           Manipulate`InterpretManipulate[1]
          ]
         ],
         "Output"
        ]
       },
       Open
      ]
     ],
     Cell[
      "Because the dot is now outside the wheel, we get this interesting non-trivial behavior where the dot is sometimes moving backwards instead of continuously forward. ",
      "Text"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "ParametricPlot",
            "[",
            RowBox[
             {
              RowBox[
               {
                "{",
                RowBox[
                 {
                  RowBox[{"x", "[", "t", "]"}],
                  ",",
                  RowBox[{"y", "[", "t", "]"}]
                 }
                ],
                "}"
               }
              ],
              ",",
              RowBox[{"{", RowBox[{"t", ",", "0", ",", "10"}], "}"}],
              ",",
              RowBox[{"PlotStyle", "->", "Thick"}]
             }
            ],
            "]"
           }
          ]
         ],
         "Input"
        ],
        Cell[
         BoxData[
          GraphicsBox[
           {
            {
             { },
             { },
             TagBox[
              {
               RGBColor[0.36842, 0.50678, 0.7098],
               Thickness[Large],
               Opacity[1.0],
               FaceForm[Opacity[0.3]],
               LineBox[
                CompressedData[
                 "\n1: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\nlHcXxuPe1HgwWQ96rTzO72x3YIU6612/cP5EY7reE9mOyU5mVtum6EEcG71D\nlWAb5shh7miYiuvl+mH+KqwFc330g5iDsx28JFW//onVDs43sqbpQbIbbYJq\nUwP2RvxbmAvOfhGp4X/W67D71Acs8v6xShF/zb4aLDEhV2wF58JLI3br1lXY\nN+9D3ErpeP720jn63SvHVGzPi7n+Y283x8QrJdgp+5BT0TiDs8sr6sECrO+5\nu2LuP669vCR58SNGe2nlcQ3OVMXSj8Yob7GYq+cjO3Eus9j3s+JkEhYcJSTe\n/29dbGLlXNRt7Fi9r2PfPzaLqLDyuY90zkwdbP/3/NuzJc3cKYj/KWGw8h9n\nVZ46gLIR6X2URtY/fxpkpcdI+ai/lf9o+L/9/dU0cjcL0Ti7v5rjP39a56/9\nV1WCPkvGzcjizOVuPm5wpxy5vLIPWsDj5Vq/olgmWoViH3csvv/Hl8uN0ku+\noz3ZwsdccY55gfVN2NYhP9b/0gk4Q+eRr2GzP5CIzsTCFzzfVKr5zwNuN6EX\n3DsG1jjXajWmO9xvRj5vOJIn8XqRgrsbUppb0KxGPOE6zvOTr/Lu8beit/wi\nyWS8vs77WTBm+za0Gm9lHYBzYYC95/6kdkRY6lafx/WhKaQi1dPfgXSt5bKq\ncD3ZfZ8zoDj+Rt+zv1qI4/zsg3iiR2I30nGQPxCA6y9P+WGwQ1cPuvVQxIiA\n6zN8iQHXex+C/zZdj+L6nei8UHP2Tj96xn2JfB/Xd8M59+RPpwdQ0/zrTyO4\n/hO/jPT7xgyiok/HJxhwJoXY3JSXHkK1pr6Foni/PLPgVhAtH0LmV9KsD8Tj\n+rQR5PkwN4zyaRVUjfF+4/295H0odARpSOztNMT7Mb1IWU1g1yjqujwcLf0I\nr9edVTtzGEPi7KUFBLyfu2xOLrz7NYbejjI1LOL9TsU1dgZzHUdvfL/0v4rU\ngxm52mOToRPoxLnYtowwfH6GnH2iUjyFuPUS/E/cw+M5vYt+3GQa3RA97kCN\nzxcv75ro0l/TiGD8mfUAPo90dx/41jY6g+4IfFG5HIjno8ze3Z/6L6KfsNme\nCcD9+SkULX3vLzIZ2Dzt4o/Xf1fYjw26eVSfLcmqfU0Pim/3yXuEzSNKmbRz\n0iX8efPTUH1vAeVfuRRScQF/3jqsprJ+AWXzj9/pP4/P22lpHjWORaTzStiZ\n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\nDRUZjy840Qmpe67DfKs0aG7VhCVmOqHRbFNCYdKGhiKXu0F7Z4hGtxyzE6za\nQJ+8dUL2xhTx1qIsQodNGyxN/XKyxaeIKVcXVTV2bTAgRSRY50wScXybh7k5\ntMFk3Y3Xar0TRKpd/6orlzZQHt1fmPEfJ4598lhH5tYGjis3/Yoz/xJWXlq3\nmTZqgy5v2KvBrjGiQYak4MejDY7i13UdiVFiQ+tZmf382vA01GqDw/ohIoSC\nNpdjti24/HW/ziBxa/2xsyYC2pDnvupyJmyAcOYbrrMT1AYmZeaGIe4/RNXl\n7ezDmCtvktX0DfqJLr+6aDshbbheaz8kGdVHhP89UmYsrA20gA82vJt+E6Yt\nMfZlmJWWKC3yFr1EjOEZt30i2nAnwLG1IqWHIK9UZM9ipnm8Sk0z7yY0ZI9O\nG5O0wX43oyq2v5Nw+7mU8hqzfMyxG8HuHYSLnbSZoag2JJpHbdOJaCWaOlqs\nEzA3+9nu2i3xk1D8IzXUizn54BdBnrctxH0LnTGpTVgfJmePRWgmGMdvuFtj\nTvTza55s+k6EdMj6xWN2S79eNHehkRg1iuKuxyxzdMhWcrGe8OKW2M3AvPW3\n0mVf6VrCz1mjeY+YNpT6bn223vQb0dnlzG+EOfCy62xt6BfCESn0e2Ae+nXO\normgnJA7L2b4ALP94dffto1/IsI2lJlnrq1vf2rke7yEOP2tkblsbb2zSfFp\nVEB0P5zTb15jgaDoKZUcIlp2QqsXM9O23aQnjhnE8sbr/cNr6+31olddkgk1\n32tK42uft3RY+s2EEk8tP6n8n4/SVx5khCK5EwpTa88H1iaPTOoko+JQdOH/\n+23OWxoTz0Bu5RcS//++kbY3FtPZ6M1/8tFr52G6eW7PNuMCpLZnj/EbzFB1\n7ElOZjESc3brisacNfekPzjoE3LtklHxXuOiK6q3dpcj6ahgW1PMDa4iyj11\nlSh54aPD/rX1CQz9UPevSKFe8DgbZqsfjktu/DXoPl8X90+sr+GM/sfEN3VI\ndto15ynmocgPHEFPG1DokdulBzA37GXrfavWhGTbZvfTsX8DG388fRbcjGoP\nzj3MxsyXwHFOtroFrRscPbkNc6x0rlS7aSt6Yy1c/B3HT2zEl7bl2Db0vpMi\nG4jZjcVnMrW9HU0Enz1Yj+PPivVQi9OpLnTOtbXdDXOgp/ml2zHdSOTzqUQe\nzEO8OoKS33+hx37dNzRwPFdJ7Ysx3N6LysakQtxwPsgVsAmeDu9D2rG5tf04\nf84e09+pebAfrbRGuq3lk5WsgLx0dz8K4+3u3onzLWtwM3e73AB6GN9QcJMP\nx9uun03Pvg+ggIKNnH94cf7SWYPOew+iu3Ese6Jw/qp6bEgsKB5C8lyZnL9x\nflPslcV0/htG9zSu++/FzBEXllTGGEbuJBnIx/Xh9c7Pq17qo2iA+THnI1w/\niuR1SuIy/iLl3ACb8vXaICpsOmdMG0clPW13/+J6Y6WttGm0A3Og4NUDuB7Z\nt9LON7NMIM04cnwEszZcS9aqeiQziSpLJRwTcD1TOnvSyMBtEiXeWdV7yqDB\nRMA1RZf8SRTQbnX51QoN4rc43urWmkIl8axSYQs00E3LXnQ3nUa2b6oDvedp\nUEMNj9WNnUbPvDar2OD6eqVopu9m+zTKafNskKPTIJJhYrzFYgY96rB782iC\nBhrfZ99mnqajugqPKod/NODuTKryjqWjOHeH66rjNBCbOG6d2EJHT+4HLlaP\n4vvDzX/blN4saumfXq7G9d/WLSC3UHkOLXNfJYX8ocFH+vNYbdc5lD7at/lQ\nP96Ph0V/x4s59HiegyO+lwY72E0CuoTmUbnva2/VThqI+5Ykyw3No6CFqZHW\ndhpYWoVlHNu8gGDmcrQXvp8iq1osC/QW0BbSUtbLHzRwY1UyCsxaQAqHglSI\nFhpIyGlYt/UsoPkI6ubvTTR4LVuSF8C3iNZn8NnZfMf6HItEl4hFpLmzettE\nAw1KfT6OvHNeRP8Dgt+oOQ==\n       "
                ]
               ]
              },
              Annotation[#1, "Charting`Private`Tag$215507#1"] &
             ]
            },
            { }
           },
           Axes -> {True, True},
           AxesLabel -> {None, None},
           AxesOrigin -> {0, 0},
           DisplayFunction -> Identity,
           FrameLabel -> {{None, None}, {None, None}},
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}},
           GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
           ImagePadding -> All,
           Method -> {
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2,
             "TrackMousePosition" -> {True, False},
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2},
              "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
               "freeformCursorMode" -> True,
               "placement" -> {"x" -> "All", "y" -> "None"}
              }
             }
            },
            "ScalingFunctions" -> None
           },
           PlotRange -> {{0.0, 42.21}, {-2.0, 6.0}},
           PlotRangeClipping -> True,
           PlotRangePadding -> {
            {Scaled[0.05], Scaled[0.05]},
            {Scaled[0.05], Scaled[0.05]}
           },
           Ticks -> {Automatic, Automatic}
          ]
         ],
         "Output"
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "Plot",
            "[",
            RowBox[
             {
              RowBox[
               {
                "{",
                RowBox[
                 {
                  RowBox[{"x", "[", "t", "]"}],
                  ",",
                  " ",
                  RowBox[{"y", "[", "t", "]"}]
                 }
                ],
                "}"
               }
              ],
              ",",
              " ",
              RowBox[
               {"{", RowBox[{"t", ",", " ", "0", ",", " ", "10"}], "}"}
              ],
              ",",
              " ",
              RowBox[{"PlotLabels", "->", "\"Expressions\""}]
             }
            ],
            "]"
           }
          ]
         ],
         "Input"
        ],
        Cell[
         BoxData[
          GraphicsBox[
           {
            {
             { },
             { },
             TagBox[
              {
               RGBColor[0.36842, 0.50678, 0.7098],
               AbsoluteThickness[1.6],
               Opacity[1.0],
               LineBox[
                CompressedData[
                 "\n1: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\n       "
                ]
               ]
              },
              Annotation[#1, "Charting`Private`Tag$215549#1"] &
             ],
             TagBox[
              {
               RGBColor[0.88072, 0.61104, 0.14205],
               AbsoluteThickness[1.6],
               Opacity[1.0],
               LineBox[
                CompressedData[
                 "\n1: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\nNqYKe+JLqGBacZEg5MHs1b+t792W0P8ALxjweQ==\n       "
                ]
               ]
              },
              Annotation[#1, "Charting`Private`Tag$215549#2"] &
             ]
            },
            {
             {
              { },
              {
               GraphicsGroupBox[
                {
                 {
                  GrayLevel[1],
                  AbsoluteThickness[4],
                  Opacity[NCache[Rational[2, 3], 0.66667]],
                  CapForm["Butt"],
                  JoinForm["Round"],
                  BSplineCurveBox[
                   {
                    Offset[{3, 0}, {10.0, 41.632}],
                    Offset[{3.0, 0.0}, {10.408, 41.632}],
                    Offset[{0, 0}, {10.622, 41.632}],
                    Offset[{5.0, 0.0}, {10.622, 41.632}],
                    Offset[{10.0, 0.0}, {10.622, 41.632}],
                    Offset[{10.0, 0.0}, {10.622, 41.632}]
                   }
                  ]
                 },
                 {
                  RGBColor[0.66667, 0.66667, 0.66667],
                  AbsoluteThickness[1.25],
                  BSplineCurveBox[
                   {
                    Offset[{3, 0}, {10.0, 41.632}],
                    Offset[{3.0, 0.0}, {10.408, 41.632}],
                    Offset[{0, 0}, {10.622, 41.632}],
                    Offset[{5.0, 0.0}, {10.622, 41.632}],
                    Offset[{10.0, 0.0}, {10.622, 41.632}],
                    Offset[{10.0, 0.0}, {10.622, 41.632}]
                   }
                  ]
                 },
                 {
                  EdgeForm[None],
                  FaceForm[
                   {GrayLevel[1], Opacity[NCache[Rational[2, 3], 0.66667]]}
                  ],
                  PolygonBox[
                   {
                    Offset[{30.0, 9.5}, {10.622, 41.632}],
                    Offset[{30.0, -9.5}, {10.622, 41.632}],
                    Offset[{10.0, -9.5}, {10.622, 41.632}],
                    Offset[{10.0, 9.5}, {10.622, 41.632}]
                   }
                  ]
                 },
                 {
                  RGBColor[0.66667, 0.66667, 0.66667],
                  AbsoluteThickness[1.25],
                  EdgeForm[None]
                 },
                 { },
                 InsetBox[
                  StyleBox[
                   RotationBox[
                    TagBox[
                     RowBox[{"x", "(", TagBox["t", HoldForm], ")"}],
                     HoldForm
                    ],
                    BoxRotation -> 0.0
                   ],
                   StripOnInput -> False,
                   LineOpacity -> 1,
                   FrontFaceOpacity -> 1,
                   BackFaceOpacity -> 1,
                   Opacity -> 1,
                   FontOpacity -> 1
                  ],
                  Offset[{20.0, 0.0}, {10.622, 41.632}],
                  NCache[
                   ImageScaled[{Rational[1, 2], Rational[1, 2]}],
                   ImageScaled[{0.5, 0.5}]
                  ]
                 ]
                }
               ],
               GraphicsGroupBox[
                {
                 {
                  GrayLevel[1],
                  AbsoluteThickness[4],
                  Opacity[NCache[Rational[2, 3], 0.66667]],
                  CapForm["Butt"],
                  JoinForm["Round"],
                  BSplineCurveBox[
                   {
                    Offset[{3, 0}, {10.0, -1.6518}],
                    Offset[{2.9786, 0.35728}, {10.408, -1.6518}],
                    Offset[{0, 0}, {10.622, -1.4683}],
                    Offset[{5.0, 0.0}, {10.622, -1.4683}],
                    Offset[{10.0, 0.0}, {10.622, -1.4683}],
                    Offset[{10.0, 0.0}, {10.622, -1.4683}]
                   }
                  ]
                 },
                 {
                  RGBColor[0.66667, 0.66667, 0.66667],
                  AbsoluteThickness[1.25],
                  BSplineCurveBox[
                   {
                    Offset[{3, 0}, {10.0, -1.6518}],
                    Offset[{2.9786, 0.35728}, {10.408, -1.6518}],
                    Offset[{0, 0}, {10.622, -1.4683}],
                    Offset[{5.0, 0.0}, {10.622, -1.4683}],
                    Offset[{10.0, 0.0}, {10.622, -1.4683}],
                    Offset[{10.0, 0.0}, {10.622, -1.4683}]
                   }
                  ]
                 },
                 {
                  EdgeForm[None],
                  FaceForm[
                   {GrayLevel[1], Opacity[NCache[Rational[2, 3], 0.66667]]}
                  ],
                  PolygonBox[
                   {
                    Offset[{30.0, 9.5}, {10.622, -1.4683}],
                    Offset[{30.0, -9.5}, {10.622, -1.4683}],
                    Offset[{10.0, -9.5}, {10.622, -1.4683}],
                    Offset[{10.0, 9.5}, {10.622, -1.4683}]
                   }
                  ]
                 },
                 {
                  RGBColor[0.66667, 0.66667, 0.66667],
                  AbsoluteThickness[1.25],
                  EdgeForm[None]
                 },
                 { },
                 InsetBox[
                  StyleBox[
                   RotationBox[
                    TagBox[
                     RowBox[{"y", "(", TagBox["t", HoldForm], ")"}],
                     HoldForm
                    ],
                    BoxRotation -> 0.0
                   ],
                   StripOnInput -> False,
                   LineOpacity -> 1,
                   FrontFaceOpacity -> 1,
                   BackFaceOpacity -> 1,
                   Opacity -> 1,
                   FontOpacity -> 1
                  ],
                  Offset[{20.0, 0.0}, {10.622, -1.4683}],
                  NCache[
                   ImageScaled[{Rational[1, 2], Rational[1, 2]}],
                   ImageScaled[{0.5, 0.5}]
                  ]
                 ]
                }
               ]
              }
             },
             { }
            }
           },
           AspectRatio -> NCache[GoldenRatio^(-1), 0.61803],
           Axes -> {True, True},
           AxesLabel -> {None, None},
           AxesOrigin -> {0, 0},
           DisplayFunction -> Identity,
           Frame -> {{False, False}, {False, False}},
           FrameLabel -> {{None, None}, {None, None}},
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}},
           GridLines -> {None, None},
           GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
           ImagePadding -> {{All, 48.898}, {All, All}},
           Method -> {
            "DefaultBoundaryStyle" -> Automatic,
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2,
             "TrackMousePosition" -> {True, False},
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2},
              "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
               "freeformCursorMode" -> True,
               "placement" -> {"x" -> "All", "y" -> "None"}
              }
             }
            },
            "DefaultMeshStyle" -> AbsolutePointSize[6],
            "ScalingFunctions" -> None,
            "CoordinatesToolOptions" -> {
             "DisplayFunction" ->
              (Function[
               {
                (Identity[#1] & )[Part[#1, 1]],
                (Identity[#1] & )[Part[#1, 2]]
               }
              ]),
             "CopiedValueFunction" ->
              (Function[
               {
                (Identity[#1] & )[Part[#1, 1]],
                (Identity[#1] & )[Part[#1, 2]]
               }
              ])
            }
           },
           PlotRange -> {{0, 10}, {-2.0, 42.21}},
           PlotRangeClipping -> False,
           PlotRangePadding -> {
            {Scaled[0.02], Scaled[0.02]},
            {Scaled[0.05], Scaled[0.080902]}
           },
           Ticks -> {Automatic, Automatic}
          ]
         ],
         "Output"
        ]
       },
       Open
      ]
     ],
     Cell[
      "Thank you for taking interest in this project!\n\nCopyright (c) 2023 RandomKiddo",
      "Text"
     ]
    },
    Open
   ]
  ]
 },
 TaggingRules -> <|"TryRealOnly" -> False|>,
 FrontEndVersion -> "13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
 StyleDefinitions -> "Default.nb",
 ExpressionUUID -> "727e47fb-2cbf-4c67-bbe5-4a67a2f0ab56"
]